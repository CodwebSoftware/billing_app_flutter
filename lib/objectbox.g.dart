// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'db/models/appointment_entity.dart';
import 'db/models/attendance_entity.dart';
import 'db/models/batch_entity.dart';
import 'db/models/company_branch_profile_entity.dart';
import 'db/models/company_profile_entity.dart';
import 'db/models/coupon_entity.dart';
import 'db/models/customer_entity.dart';
import 'db/models/employee_entity.dart';
import 'db/models/feedback_entity.dart';
import 'db/models/held_cart_entity.dart';
import 'db/models/inventory_part_entity.dart';
import 'db/models/leave_request_entity.dart';
import 'db/models/leave_type_entity.dart';
import 'db/models/loyalty_point_entity.dart';
import 'db/models/membership_entity.dart';
import 'db/models/payment_entity.dart';
import 'db/models/product_category_entity.dart';
import 'db/models/product_entity.dart';
import 'db/models/reward_entity.dart';
import 'db/models/sale_entry_entity.dart';
import 'db/models/sale_entry_items_entity.dart';
import 'db/models/sale_entry_services_entity.dart';
import 'db/models/sale_return_entity.dart';
import 'db/models/sale_return_item_entity.dart';
import 'db/models/sale_return_service_entity.dart';
import 'db/models/service_entity.dart';
import 'db/models/subscription_entity.dart';
import 'db/models/user_entity.dart';
import 'db/models/waitlist_entity.dart';
import 'db/models/working_hours_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(1, 1),
    name: 'AppointmentEntity',
    lastPropertyId: const obx_int.IdUid(14, 6137795282146942290),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3782707198161786977),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7484893209854355738),
        name: 'dateTime',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 1746488018721991938),
        name: 'notes',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 8970762079419558438),
        name: 'clientId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(23, 2154635103941386305),
        relationTarget: 'CustomerEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 4171029609198374718),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 1836339753986689651),
        name: 'type',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 1438235590578633309),
        name: 'sendReminder',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 6137795282146942290),
        name: 'status',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(8, 2633763398425857178),
        name: 'employees',
        targetId: const obx_int.IdUid(4, 13),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(9, 3923106376139116234),
        name: 'services',
        targetId: const obx_int.IdUid(11, 10),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(2, 2),
    name: 'BatchEntity',
    lastPropertyId: const obx_int.IdUid(17, 108815393757418790),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4408249471342122544),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3558469555224399242),
        name: 'batchNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2823617341962613492),
        name: 'manufactureDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 2627056415440027285),
        name: 'expiryDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 5193960327618132015),
        name: 'unitPrice',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 5302418656446338367),
        name: 'quantity',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 7723320703720347024),
        name: 'productId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(1, 2835981840258088719),
        relationTarget: 'ProductEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 5003679726015843630),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 2589369642174057793),
        name: 'barcode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 352814192558437681),
        name: 'discount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 4788087905283560125),
        name: 'isDiscountPercentage',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 597205138980720623),
        name: 'hsnSacCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 2723411046973550639),
        name: 'gstType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 2706354187492084849),
        name: 'gstRate',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 2702008482362323172),
        name: 'cgstAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 1064020650061319815),
        name: 'sgstAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(17, 108815393757418790),
        name: 'igstAmount',
        type: 8,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(4, 13),
    name: 'EmployeeEntity',
    lastPropertyId: const obx_int.IdUid(19, 974587799875534512),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4998061777647555126),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1140563142881236250),
        name: 'email',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 5865219133989937541),
        name: 'phone',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7724604341865006353),
        name: 'specialty',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 1584809768509721971),
        name: 'role',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 1469061002129323692),
        name: 'isActive',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 9180964509228363745),
        name: 'joiningDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 6046289603128488564),
        name: 'totalLeavesAllowed',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 1227978340487271517),
        name: 'leavesTaken',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 4072941442053259187),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(19, 974587799875534512),
        name: 'name',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(16, 1265363694495318104),
        name: 'workingHours',
        targetId: const obx_int.IdUid(14, 14),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(17, 5922812143709782086),
        name: 'attendanceRecords',
        targetId: const obx_int.IdUid(15, 15),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(18, 4761262787033265148),
        name: 'leaveRequests',
        targetId: const obx_int.IdUid(16, 17),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(19, 2531763259591118265),
        name: 'approvedLeaveRequests',
        targetId: const obx_int.IdUid(16, 17),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(8, 7),
    name: 'PaymentEntity',
    lastPropertyId: const obx_int.IdUid(8, 8810304731500953910),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 104002698055103214),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7268177203217126406),
        name: 'date',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2086083151684022866),
        name: 'paidAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 58887542785696214),
        name: 'remainingAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8863642402849973806),
        name: 'refund',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 799014372166128576),
        name: 'invoiceId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(5, 3295917458801961924),
        relationTarget: 'SaleEntryEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 8744033744087730752),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 8810304731500953910),
        name: 'refundAmount',
        type: 8,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(9, 8),
    name: 'ProductCategoryEntity',
    lastPropertyId: const obx_int.IdUid(6, 8769847417906430401),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8033098865353709073),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4301817913450793138),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 8180329285101394845),
        name: 'code',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 5689538178895327937),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 5199323027582455703),
        name: 'parentId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(6, 3500776771169380106),
        relationTarget: 'ProductCategoryEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 8769847417906430401),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(26, 397126148432315516),
        name: 'subcategories',
        targetId: const obx_int.IdUid(9, 8),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(27, 1773146043337127094),
        name: 'products',
        targetId: const obx_int.IdUid(10, 9),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(10, 9),
    name: 'ProductEntity',
    lastPropertyId: const obx_int.IdUid(13, 8608213690550940924),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 5933265263205230349),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3184728316006434153),
        name: 'code',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 1219981519343253877),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 6737793619532667355),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 4818678157248556481),
        name: 'price',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3629921023167251984),
        name: 'quantity',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 704382516682686818),
        name: 'categoryId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(7, 934750567218652663),
        relationTarget: 'ProductCategoryEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 5910286095155771915),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 7270116119590705467),
        name: 'barcode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 5127302857610507118),
        name: 'discount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 5927824555764159809),
        name: 'isDiscountPercentage',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 8546547920616999982),
        name: 'hsnSacCode',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(28, 383829231762690890),
        name: 'batches',
        targetId: const obx_int.IdUid(2, 2),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(11, 10),
    name: 'ServiceEntity',
    lastPropertyId: const obx_int.IdUid(14, 6894124304827446320),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6663052159514686550),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1188644275723275958),
        name: 'code',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2392419581137815517),
        name: 'qty',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1096216141260757017),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7170629476280511288),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7213293194361741543),
        name: 'price',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 8120206843330791807),
        name: 'duration',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 747914818384592893),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 5834646122473477680),
        name: 'hsnSacCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 6281926782404438512),
        name: 'gstType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 1840643433747553047),
        name: 'gstRate',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 3525010856337669619),
        name: 'cgstAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 2750531907450749130),
        name: 'sgstAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 6894124304827446320),
        name: 'igstAmount',
        type: 8,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(12, 11),
    name: 'SubscriptionEntity',
    lastPropertyId: const obx_int.IdUid(9, 8815622805375363490),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3547007523672432232),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3017657365280266200),
        name: 'mobileNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 608458150198195681),
        name: 'plan',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 3192220122465870757),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8872328981313318975),
        name: 'startDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7351590787980633898),
        name: 'endDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 1050799680146206234),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 3544977098387234467),
        name: 'updatedAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 8815622805375363490),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(13, 12),
    name: 'UserEntity',
    lastPropertyId: const obx_int.IdUid(3, 3373042225411509842),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2078558062891765928),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2165283508141869954),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 3373042225411509842),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(14, 14),
    name: 'WorkingHoursEntity',
    lastPropertyId: const obx_int.IdUid(8, 697270845258830866),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 7005756923173819874),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 8000590025767507905),
        name: 'weekday',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 7945196250292150716),
        name: 'startHour',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 2093944745015112807),
        name: 'startMinute',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 491736454469903626),
        name: 'endHour',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7728666990391699413),
        name: 'endMinute',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 6312410449244517717),
        name: 'employeeId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(8, 6174525230011542800),
        relationTarget: 'EmployeeEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 697270845258830866),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(15, 15),
    name: 'AttendanceEntity',
    lastPropertyId: const obx_int.IdUid(5, 2803131496499179831),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3620255924600439659),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6624868888623974509),
        name: 'date',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 143880689780527217),
        name: 'notes',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 8174660688294017612),
        name: 'employeeId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(9, 335263458195064298),
        relationTarget: 'EmployeeEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 2803131496499179831),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(16, 17),
    name: 'LeaveRequestEntity',
    lastPropertyId: const obx_int.IdUid(11, 2323163164843446390),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 465425027493742537),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1296743420167711274),
        name: 'startDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 6381216667455489304),
        name: 'endDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 578418774746206135),
        name: 'reason',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 3845755631085824752),
        name: 'requestDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 91711883097925388),
        name: 'decisionDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 5689161639393693201),
        name: 'decisionNotes',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 5464910075772390783),
        name: 'employeeId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(10, 4214309245953383114),
        relationTarget: 'EmployeeEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 8068462693220600322),
        name: 'leaveTypeId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(11, 9063782675397207322),
        relationTarget: 'LeaveTypeEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 2787149929404982284),
        name: 'approverId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(12, 4243685621002671058),
        relationTarget: 'EmployeeEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 2323163164843446390),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(17, 16),
    name: 'LeaveTypeEntity',
    lastPropertyId: const obx_int.IdUid(6, 7440928777218939997),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2227024093522925590),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 5701544774907190733),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 6437588691078032684),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7326091594458892340),
        name: 'maxDaysPerYear',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 1615976525767429367),
        name: 'requiresApproval',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 7440928777218939997),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(25, 6202137397412127126),
        name: 'leaveRequests',
        targetId: const obx_int.IdUid(16, 17),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(19, 21),
    name: 'InventoryPartEntity',
    lastPropertyId: const obx_int.IdUid(7, 5024958891810562266),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 7755316944719202456),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6675393844817417591),
        name: 'partNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 8032777223474729620),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7729257063395343471),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 1984956140047695928),
        name: 'stockQuantity',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 478694577622695659),
        name: 'unitPrice',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 5024958891810562266),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(24, 3449845904107484648),
    name: 'LoyaltyPointEntity',
    lastPropertyId: const obx_int.IdUid(7, 4327427626217800525),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6580059624443010720),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6691930826807881508),
        name: 'points',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4293729208647614606),
        name: 'earnedDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1203611227268004626),
        name: 'expiryDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 1943720831531204120),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(26, 8045717316400828315),
        relationTarget: 'CustomerEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 4327427626217800525),
        name: 'reason',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(26, 6779345190163713475),
    name: 'CustomerEntity',
    lastPropertyId: const obx_int.IdUid(39, 7155982173844003511),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 1108988228510094135),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6800491622589868135),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4220471385277686765),
        name: 'email',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 3990027140469094780),
        name: 'phone',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 740905022282828595),
        name: 'gender',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 4924916996935723953),
        name: 'code',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 8518208846339979297),
        name: 'type',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 7440621574762290912),
        name: 'addressLine1',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 930832250710222914),
        name: 'addressLine2',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 4919392465939632779),
        name: 'city',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(17, 7992890901328892080),
        name: 'state',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(18, 6000276949592806990),
        name: 'postalCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(19, 603744608601243406),
        name: 'country',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(20, 2036081280084098360),
        name: 'creditLimit',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(21, 8310066181464130952),
        name: 'creditDays',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(22, 5345658136306354459),
        name: 'outstandingBalance',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(23, 5981843074119054618),
        name: 'paymentTerms',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(24, 8129293188848809141),
        name: 'bankDetails',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(25, 2606168172486630770),
        name: 'panNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(26, 730247712450385842),
        name: 'gstIN',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(27, 7930877128376944763),
        name: 'loyaltyID',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(28, 1517380876411692180),
        name: 'loyaltyPoints',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(29, 4987177318527882170),
        name: 'customerGroup',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(30, 5536411306149774756),
        name: 'priceLevel',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(31, 801017608797523593),
        name: 'discountPercentage',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(32, 2205627216175152102),
        name: 'dateOfBirth',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(33, 2172072799917928641),
        name: 'anniversaryDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(34, 5693357804198328856),
        name: 'createdAt',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(35, 4212256755872337451),
        name: 'createdBy',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(36, 3388777964229006068),
        name: 'lastUpdateDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(37, 2146726415188007136),
        name: 'lastUpdatedBy',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(38, 3338698151400894388),
        name: 'outletId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(39, 7155982173844003511),
        name: 'isActive',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(13, 4386609939189726901),
        name: 'feedbacks',
        targetId: const obx_int.IdUid(33, 4277670150275933361),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(14, 3046265654958362885),
        name: 'memberships',
        targetId: const obx_int.IdUid(34, 6269479026711277248),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(15, 4386414707434397936),
        name: 'invoices',
        targetId: const obx_int.IdUid(42, 3864944993977413808),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(27, 7402454849702048898),
    name: 'RewardEntity',
    lastPropertyId: const obx_int.IdUid(6, 2929644029567276234),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3290518147459391842),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 4672176711864648289),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5097996621002246206),
        name: 'description',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 3665021718760323680),
        name: 'pointsRequired',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 5654268914143490994),
        name: 'stock',
        type: 6,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(28, 2001466827283379378),
    name: 'CompanyProfileEntity',
    lastPropertyId: const obx_int.IdUid(30, 7254754997699751790),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2191183940540967013),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 2080763220571736822),
        name: 'name',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4477625878275491500),
        name: 'email',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 298355649342503674),
        name: 'phone',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 6992006484973660151),
        name: 'state',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 3020552667957405438),
        name: 'country',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 1996403873685373027),
        name: 'code',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 5475637244957196433),
        name: 'businessType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 3813270446957122016),
        name: 'addressLine1',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 6150599273515786879),
        name: 'addressLine2',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 2102297744520104121),
        name: 'city',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 6111651221672724195),
        name: 'postalCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 2343942031294368133),
        name: 'panNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 2166715289508254398),
        name: 'gstIN',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(17, 223948079528792193),
        name: 'vatTRN',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(18, 7556004655555610881),
        name: 'tinNum',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(19, 2566911981960633809),
        name: 'companyRegNum',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(20, 8037961857421041229),
        name: 'bankName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(21, 1677483977487946423),
        name: 'bankAccNum',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(22, 7017090596523929437),
        name: 'ifscCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(23, 8623261343809101606),
        name: 'currencyCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(24, 5858810011431734670),
        name: 'financialYearStart',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(25, 2747745114430083075),
        name: 'taxationModel',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(26, 2473994175132208376),
        name: 'createdDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(27, 3705322724041876406),
        name: 'createdBy',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(28, 4590077092729397232),
        name: 'lastUpdateDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(29, 8294236278715418498),
        name: 'lastUpdateBy',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(30, 7254754997699751790),
        name: 'isActive',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(29, 149453105517309635),
    name: 'WaitlistEntity',
    lastPropertyId: const obx_int.IdUid(4, 4107977588850651611),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 4430773196837081466),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7947495681230316914),
        name: 'preferredDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 6820114094359535135),
        name: 'notes',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 4107977588850651611),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(28, 3860766501305721852),
        relationTarget: 'CustomerEntity',
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(2, 3295390716084894719),
        name: 'services',
        targetId: const obx_int.IdUid(11, 10),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(33, 4277670150275933361),
    name: 'FeedbackEntity',
    lastPropertyId: const obx_int.IdUid(5, 6209733862602311499),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 7101710264301740628),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 1955114145957210283),
        name: 'rating',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 9058119075459725749),
        name: 'comment',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 6650022190320570337),
        name: 'date',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 6209733862602311499),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(37, 5972737418980842852),
        relationTarget: 'CustomerEntity',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(34, 6269479026711277248),
    name: 'MembershipEntity',
    lastPropertyId: const obx_int.IdUid(6, 5485639195498532203),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 1894250408994342623),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7163753756864480005),
        name: 'type',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4811084719887275950),
        name: 'discount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 159418285044754231),
        name: 'startDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 3739550076071171249),
        name: 'endDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 5485639195498532203),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(38, 3998033079303310654),
        relationTarget: 'CustomerEntity',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(35, 3987967369414088038),
    name: 'CompanyBranchProfileEntity',
    lastPropertyId: const obx_int.IdUid(29, 7358631374674436667),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2668049053370116058),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 8973860260084082590),
        name: 'code',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 259188228421209293),
        name: 'companyId',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 971282234136341625),
        name: 'branchName',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 1341887739301341839),
        name: 'branchType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 1900849014752484638),
        name: 'addressLine1',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 1102643800543895063),
        name: 'addressLine2',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 4231480493470548934),
        name: 'city',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 7110986831263276431),
        name: 'state',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 4997840077460137320),
        name: 'postalCode',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 2985111930518165152),
        name: 'country',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 5865064025346616395),
        name: 'email',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 81167273456493426),
        name: 'phone',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 349222864480249078),
        name: 'gstIN',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 3407602283162684953),
        name: 'vatTRN',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 745743956281761424),
        name: 'drugLicNum',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(17, 1696772251828019357),
        name: 'fssaiLicNum',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(18, 1301498534562607529),
        name: 'outletGroup',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(19, 8253114459275671222),
        name: 'warehouseId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(20, 3153873746207124607),
        name: 'priceLevelDefault',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(21, 4552790375494265497),
        name: 'reorderLevel',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(22, 8409696132030140939),
        name: 'barcodePrefix',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(23, 4992323062808167117),
        name: 'zoneClassification',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(24, 686704516882745273),
        name: 'landmark',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(25, 4115298154339449555),
        name: 'createdDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(26, 3111018514960865073),
        name: 'createdBy',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(27, 4550209852411213737),
        name: 'lastUpdatedDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(28, 7932633586266260456),
        name: 'lastUpdatedBy',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(29, 7358631374674436667),
        name: 'isActive',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(36, 7095064945666572135),
    name: 'HeldCartEntity',
    lastPropertyId: const obx_int.IdUid(8, 5458073431879999857),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 3791127618036660857),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 845433396907820415),
        name: 'customerId',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 4269173888966794065),
        name: 'holdId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7907585024941035594),
        name: 'itemsJson',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 3051765309213527178),
        name: 'servicesJson',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 6449023121894941121),
        name: 'invoiceDiscount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 9098077417937950576),
        name: 'isInvoiceDiscountPercentage',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(37, 176729686691251239),
    name: 'CouponEntity',
    lastPropertyId: const obx_int.IdUid(6, 5643498312006318901),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8164461166455449856),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 9089717885109334393),
        name: 'code',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5402921125749750620),
        name: 'isPercentage',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1093186160082792774),
        name: 'value',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 7240688420027724459),
        name: 'expiryDate',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 5643498312006318901),
        name: 'isActive',
        type: 1,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(39, 2551032015122634748),
    name: 'SaleReturnEntity',
    lastPropertyId: const obx_int.IdUid(16, 1341889270834912568),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 5752896809268115340),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 6176845372203740215),
        name: 'totalReturnAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 7817011928368435204),
        name: 'reason',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 3757639176575968218),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(39, 5267199745519151117),
        relationTarget: 'CustomerEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(13, 599947710096589506),
        name: 'returnNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 6177139528863922654),
        name: 'date',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 925784132740001087),
        name: 'originalInvoiceId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(55, 7383305402183788990),
        relationTarget: 'SaleEntryEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(16, 1341889270834912568),
        name: 'status',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[
      obx_int.ModelBacklink(
        name: 'items',
        srcEntity: 'SaleReturnItemEntity',
        srcField: '',
      ),
      obx_int.ModelBacklink(
        name: 'services',
        srcEntity: 'SaleReturnServiceEntity',
        srcField: '',
      ),
    ],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(40, 6289351184171377647),
    name: 'SaleReturnItemEntity',
    lastPropertyId: const obx_int.IdUid(15, 2196971617805796034),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8581261320718641534),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 5186310427871741793),
        name: 'saleReturnId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(42, 4778472197140319607),
        relationTarget: 'SaleReturnEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 290548641801049760),
        name: 'quantity',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 4245919161528139936),
        name: 'unitPrice',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 8104788652940273580),
        name: 'discount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 4936563136859022312),
        name: 'isDiscountPercentage',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 881947505970772753),
        name: 'gstType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 5001678244579413910),
        name: 'gstRate',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 8933556183730045686),
        name: 'productId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(58, 457065177164763637),
        relationTarget: 'ProductEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(15, 2196971617805796034),
        name: 'batchId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(59, 6041055750925546840),
        relationTarget: 'BatchEntity',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(41, 4684359538830985067),
    name: 'SaleReturnServiceEntity',
    lastPropertyId: const obx_int.IdUid(14, 5257061220066108941),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2716473972598177750),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 5523966163873452050),
        name: 'saleReturnId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(44, 685546004768224301),
        relationTarget: 'SaleReturnEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 6905716744542014867),
        name: 'quantity',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 4530214005121779863),
        name: 'price',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 8148154031096122220),
        name: 'discount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 8376477874597971499),
        name: 'isDiscountPercentage',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 2042046932338227291),
        name: 'gstType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 2095002769461962451),
        name: 'gstRate',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(14, 5257061220066108941),
        name: 'serviceId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(60, 5250026188204353874),
        relationTarget: 'ServiceEntity',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(42, 3864944993977413808),
    name: 'SaleEntryEntity',
    lastPropertyId: const obx_int.IdUid(10, 7031780409370003460),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 1468568294967225663),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7154280925542466887),
        name: 'invoiceNumber',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 2878392172892102265),
        name: 'date',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1955060160539144509),
        name: 'totalBillAmount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 6798033955346203820),
        name: 'amountPaid',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3319083793206213899),
        name: 'status',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 6434213863822280654),
        name: 'invoiceDiscount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 1543904132943430728),
        name: 'isInvoiceDiscountPercentage',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 4949376928761490196),
        name: 'employeeId',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 7031780409370003460),
        name: 'customerId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(46, 6762349515922896311),
        relationTarget: 'CustomerEntity',
      ),
    ],
    relations: <obx_int.ModelRelation>[
      obx_int.ModelRelation(
        id: const obx_int.IdUid(31, 8636422028260689094),
        name: 'items',
        targetId: const obx_int.IdUid(43, 4326378088304993376),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(32, 2373416702352337421),
        name: 'services',
        targetId: const obx_int.IdUid(44, 4730963193371699042),
      ),
      obx_int.ModelRelation(
        id: const obx_int.IdUid(33, 4287555344314007737),
        name: 'payments',
        targetId: const obx_int.IdUid(8, 7),
      ),
    ],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(43, 4326378088304993376),
    name: 'SaleEntryItemEntity',
    lastPropertyId: const obx_int.IdUid(13, 5371771594289966285),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 5684006379934821248),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 7505629374586870282),
        name: 'quantity',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 5943697360713030877),
        name: 'unitPrice',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 3485215291487549793),
        name: 'discount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 5050379579008725618),
        name: 'isDiscountPercentage',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3711036930143208640),
        name: 'gstType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 5541079042137043230),
        name: 'gstRate',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 1881921892056318185),
        name: 'isHeld',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 6663937718636919360),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 5813049968953424568),
        name: 'invoiceId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(47, 7022492985330871049),
        relationTarget: 'SaleEntryEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 6983434412343550383),
        name: 'productId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(48, 1212587679597437875),
        relationTarget: 'ProductEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(12, 4054212754127480760),
        name: 'batchId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(49, 9015576682320468073),
        relationTarget: 'BatchEntity',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
  obx_int.ModelEntity(
    id: const obx_int.IdUid(44, 4730963193371699042),
    name: 'SaleEntryServicesEntity',
    lastPropertyId: const obx_int.IdUid(12, 3582574321660903618),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 6129377183531124380),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 5086932389710634997),
        name: 'quantity',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 6955808371692812148),
        name: 'price',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 4930909833185434507),
        name: 'discount',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 6992286787194861308),
        name: 'isDiscountPercentage',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 3623913813041061232),
        name: 'gstType',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(7, 2365526976703673049),
        name: 'gstRate',
        type: 8,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(8, 6237493418959665963),
        name: 'isHeld',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(9, 7105622845317657373),
        name: 'isDeleted',
        type: 1,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(10, 6516446086401042535),
        name: 'invoiceId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(50, 3994683726656978670),
        relationTarget: 'SaleEntryEntity',
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(11, 531132768388646019),
        name: 'serviceId',
        type: 11,
        flags: 520,
        indexId: const obx_int.IdUid(51, 6954587271393730818),
        relationTarget: 'ServiceEntity',
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(44, 4730963193371699042),
    lastIndexId: const obx_int.IdUid(60, 5250026188204353874),
    lastRelationId: const obx_int.IdUid(33, 4287555344314007737),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [
      3,
      4141757806333461940,
      7499620493621621765,
      3427585469761938957,
      19,
      20,
      22,
      18,
      23,
      5628816675354511818,
      8633696577414743862,
      4,
      5,
      6,
    ],
    retiredIndexUids: const [
      5052354679998269123,
      1375215311962421756,
      2756955541068304334,
      3859620285673420844,
      4277684070240255730,
      579704383091834585,
      7012983482815128146,
      7895193183507176808,
      514856596376748354,
      5405672463252182689,
      6543941694419969241,
      8897061309087200491,
      4828194596017149939,
    ],
    retiredPropertyUids: const [
      8845468917674861961,
      7194495521661337506,
      7691164357292090423,
      58627514420305620,
      3653953719892670897,
      9086452426331592226,
      5659994349806131664,
      3307682124138565568,
      7515285794089892549,
      6700095937386259133,
      6106987712857323883,
      2862291201868296794,
      2824094734144234185,
      731691526496162113,
      2483016537435691716,
      2564145232930738084,
      2929644029567276234,
      425962672574468218,
      7643441535310756739,
      6603837393351043928,
      3092321112447079476,
      2258755718219156471,
      841881682770526277,
      7560520364977601370,
      876121778013360899,
      8864971733574913837,
      6008616323235989275,
      20281030163971500,
      2661099506499349906,
      4389768241330235925,
      4395191802571812167,
      2205960243875323348,
      2938237454539380840,
      5051417858023604308,
      7813337396919205986,
      7767379310267386806,
      335809775898946500,
      2854988912183688313,
      5235320104049484803,
      6499403888658398740,
      1288453655255024480,
      7873311177964091802,
      5146136785254993449,
      6651982055686545759,
      7578102889316986391,
      399858823923569377,
      5965595545903270656,
      6052201490288303027,
      7410167776550863619,
      1061650350513307553,
      4850283325889654656,
      4164037557173883484,
      4314666022499607829,
      1805656390042395753,
      5742650528575770041,
      5675679167001724733,
      7069926591082208969,
      2188031225533817055,
      2187027592529072446,
      2010461241114972014,
      1894288298654525004,
      2980909803764847057,
      1270423607136872766,
      3972272866434744060,
      946163720907772484,
      5661440763050776577,
      3026091644975263263,
      3896395897847941066,
      4068687833736599861,
      5506831489297927141,
      3648428420396686460,
      2756647850792524047,
      286723785826853295,
      2315181003412754195,
      5925697523848856333,
      6398369514223196611,
      5572361537082557317,
      2148693688241461480,
      4086891852697336861,
      8546691143072229594,
      6621931133839786484,
      8363613187755682706,
      581974699797239720,
      8560146990200472889,
      2186021757090685736,
      5242009913549218410,
      3212902692143440139,
      488926714151647831,
      5498114045899334074,
      712993953346262017,
      9126198221775202011,
      5336917660775290038,
      657629563407740746,
      6776897325480285737,
      640939828060464627,
      2523303186437535435,
      101598182405193215,
      3426363640977242212,
      3943826875426223629,
      4388723316236744384,
      8606304004803379017,
      2422919617732505938,
      3327834228094998134,
      2926336922109112248,
      8608213690550940924,
      204611223239123105,
      5204147427812272457,
      3677435762531908743,
      8846027734237206325,
      8189796942110837741,
      1694006265601091985,
      8776691632881857329,
      7834041909085088572,
      317268599330084650,
      1507836735854173079,
      1907240305916843659,
      3254713053616541528,
      9188522698895814001,
      824351170928466455,
      482898839890989617,
      2996576279193092054,
      5989055269255420348,
      3733527721998250069,
      29140051468572168,
      3287444577803328688,
      7827671186996066836,
      7798860427904615339,
      4047354558591281030,
      2726066895246091648,
      8948631623744102279,
      6334772826981068029,
      8711903170928823675,
      6038410475528695245,
      4503770008909399337,
      3452832276625748712,
      1753538913153744202,
      5836037925005281584,
      8189206374882004736,
      7143572873271891682,
      6922678062656031295,
      2189886067777693113,
      5458073431879999857,
      4199888518688373301,
      6772407573979605668,
      8736664875399589272,
      287492906707666406,
      4752794548367436385,
      860702605368374230,
      4076883761679178653,
      3570926893233132128,
      4682763755797515449,
      3497135442771119066,
      2084719943878391011,
      7245368847277791841,
      567876714816316711,
      5371771594289966285,
      3582574321660903618,
      2665850865057880570,
      6268373096358737916,
    ],
    retiredRelationUids: const [
      1694289053273732388,
      7157240494290484316,
      537888978996494276,
      2481691616573073445,
      9124752225567565079,
      1289750035869934635,
      3490730983355094651,
      4296751325265314843,
      6136660634092656940,
      2293416106184633311,
      5991012546434733146,
    ],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    AppointmentEntity: obx_int.EntityDefinition<AppointmentEntity>(
      model: _entities[0],
      toOneRelations: (AppointmentEntity object) => [object.client],
      toManyRelations: (AppointmentEntity object) => {
        obx_int.RelInfo<AppointmentEntity>.toMany(8, object.id):
            object.employees,
        obx_int.RelInfo<AppointmentEntity>.toMany(9, object.id):
            object.services,
      },
      getId: (AppointmentEntity object) => object.id,
      setId: (AppointmentEntity object, int id) {
        object.id = id;
      },
      objectToFB: (AppointmentEntity object, fb.Builder fbb) {
        final notesOffset = object.notes == null
            ? null
            : fbb.writeString(object.notes!);
        final typeOffset = object.type == null
            ? null
            : fbb.writeString(object.type!);
        final statusOffset = object.status == null
            ? null
            : fbb.writeString(object.status!);
        fbb.startTable(15);
        fbb.addInt64(0, object.id);
        fbb.addInt64(3, object.dateTime?.millisecondsSinceEpoch);
        fbb.addOffset(4, notesOffset);
        fbb.addInt64(6, object.client.targetId);
        fbb.addBool(7, object.isDeleted);
        fbb.addOffset(9, typeOffset);
        fbb.addBool(10, object.sendReminder);
        fbb.addOffset(13, statusOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateTimeValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final object = AppointmentEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..dateTime = dateTimeValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateTimeValue)
          ..notes = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 12)
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          )
          ..type = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 22)
          ..sendReminder = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            24,
          )
          ..status = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 30);
        object.client.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          16,
          0,
        );
        object.client.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<AppointmentEntity>(
          object.employees,
          store,
          obx_int.RelInfo<AppointmentEntity>.toMany(8, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<AppointmentEntity>(
          object.services,
          store,
          obx_int.RelInfo<AppointmentEntity>.toMany(9, object.id),
        );
        return object;
      },
    ),
    BatchEntity: obx_int.EntityDefinition<BatchEntity>(
      model: _entities[1],
      toOneRelations: (BatchEntity object) => [object.product],
      toManyRelations: (BatchEntity object) => {},
      getId: (BatchEntity object) => object.id,
      setId: (BatchEntity object, int id) {
        object.id = id;
      },
      objectToFB: (BatchEntity object, fb.Builder fbb) {
        final batchNumberOffset = object.batchNumber == null
            ? null
            : fbb.writeString(object.batchNumber!);
        final barcodeOffset = object.barcode == null
            ? null
            : fbb.writeString(object.barcode!);
        final hsnSacCodeOffset = object.hsnSacCode == null
            ? null
            : fbb.writeString(object.hsnSacCode!);
        final gstTypeOffset = object.gstType == null
            ? null
            : fbb.writeString(object.gstType!);
        fbb.startTable(18);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, batchNumberOffset);
        fbb.addInt64(2, object.manufactureDate?.millisecondsSinceEpoch);
        fbb.addInt64(3, object.expiryDate?.millisecondsSinceEpoch);
        fbb.addFloat64(4, object.unitPrice);
        fbb.addInt64(5, object.quantity);
        fbb.addInt64(6, object.product.targetId);
        fbb.addBool(7, object.isDeleted);
        fbb.addOffset(8, barcodeOffset);
        fbb.addFloat64(9, object.discount);
        fbb.addBool(10, object.isDiscountPercentage);
        fbb.addOffset(11, hsnSacCodeOffset);
        fbb.addOffset(12, gstTypeOffset);
        fbb.addFloat64(13, object.gstRate);
        fbb.addFloat64(14, object.cgstAmount);
        fbb.addFloat64(15, object.sgstAmount);
        fbb.addFloat64(16, object.igstAmount);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final manufactureDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          8,
        );
        final expiryDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final object = BatchEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..batchNumber = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..manufactureDate = manufactureDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(manufactureDateValue)
          ..expiryDate = expiryDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(expiryDateValue)
          ..unitPrice = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          )
          ..quantity = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            14,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          )
          ..barcode = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 20)
          ..discount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            22,
          )
          ..isDiscountPercentage = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            24,
          )
          ..hsnSacCode = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 26)
          ..gstType = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 28)
          ..gstRate = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            30,
          )
          ..cgstAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            32,
          )
          ..sgstAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            34,
          )
          ..igstAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            36,
          );
        object.product.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          16,
          0,
        );
        object.product.attach(store);
        return object;
      },
    ),
    EmployeeEntity: obx_int.EntityDefinition<EmployeeEntity>(
      model: _entities[2],
      toOneRelations: (EmployeeEntity object) => [],
      toManyRelations: (EmployeeEntity object) => {
        obx_int.RelInfo<EmployeeEntity>.toMany(16, object.id):
            object.workingHours,
        obx_int.RelInfo<EmployeeEntity>.toMany(17, object.id):
            object.attendanceRecords,
        obx_int.RelInfo<EmployeeEntity>.toMany(18, object.id):
            object.leaveRequests,
        obx_int.RelInfo<EmployeeEntity>.toMany(19, object.id):
            object.approvedLeaveRequests,
      },
      getId: (EmployeeEntity object) => object.id,
      setId: (EmployeeEntity object, int id) {
        object.id = id;
      },
      objectToFB: (EmployeeEntity object, fb.Builder fbb) {
        final emailOffset = object.email == null
            ? null
            : fbb.writeString(object.email!);
        final phoneOffset = object.phone == null
            ? null
            : fbb.writeString(object.phone!);
        final specialtyOffset = object.specialty == null
            ? null
            : fbb.writeString(object.specialty!);
        final roleOffset = object.role == null
            ? null
            : fbb.writeString(object.role!);
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        fbb.startTable(20);
        fbb.addInt64(0, object.id);
        fbb.addOffset(3, emailOffset);
        fbb.addOffset(4, phoneOffset);
        fbb.addOffset(5, specialtyOffset);
        fbb.addOffset(6, roleOffset);
        fbb.addBool(7, object.isActive);
        fbb.addInt64(8, object.joiningDate?.millisecondsSinceEpoch);
        fbb.addInt64(9, object.totalLeavesAllowed);
        fbb.addInt64(10, object.leavesTaken);
        fbb.addBool(11, object.isDeleted);
        fbb.addOffset(18, nameOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final joiningDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          20,
        );
        final object = EmployeeEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..email = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..phone = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 12)
          ..specialty = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 14)
          ..role = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 16)
          ..isActive = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          )
          ..joiningDate = joiningDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(joiningDateValue)
          ..totalLeavesAllowed = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            22,
          )
          ..leavesTaken = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            24,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            26,
          )
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 40);
        obx_int.InternalToManyAccess.setRelInfo<EmployeeEntity>(
          object.workingHours,
          store,
          obx_int.RelInfo<EmployeeEntity>.toMany(16, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<EmployeeEntity>(
          object.attendanceRecords,
          store,
          obx_int.RelInfo<EmployeeEntity>.toMany(17, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<EmployeeEntity>(
          object.leaveRequests,
          store,
          obx_int.RelInfo<EmployeeEntity>.toMany(18, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<EmployeeEntity>(
          object.approvedLeaveRequests,
          store,
          obx_int.RelInfo<EmployeeEntity>.toMany(19, object.id),
        );
        return object;
      },
    ),
    PaymentEntity: obx_int.EntityDefinition<PaymentEntity>(
      model: _entities[3],
      toOneRelations: (PaymentEntity object) => [object.invoice],
      toManyRelations: (PaymentEntity object) => {},
      getId: (PaymentEntity object) => object.id,
      setId: (PaymentEntity object, int id) {
        object.id = id;
      },
      objectToFB: (PaymentEntity object, fb.Builder fbb) {
        fbb.startTable(9);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.date?.millisecondsSinceEpoch);
        fbb.addFloat64(2, object.paidAmount);
        fbb.addFloat64(3, object.remainingAmount);
        fbb.addFloat64(4, object.refund);
        fbb.addInt64(5, object.invoice.targetId);
        fbb.addBool(6, object.isDeleted);
        fbb.addFloat64(7, object.refundAmount);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          6,
        );
        final object = PaymentEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..date = dateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateValue)
          ..paidAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            8,
          )
          ..remainingAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..refund = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            16,
          )
          ..refundAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          );
        object.invoice.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.invoice.attach(store);
        return object;
      },
    ),
    ProductCategoryEntity: obx_int.EntityDefinition<ProductCategoryEntity>(
      model: _entities[4],
      toOneRelations: (ProductCategoryEntity object) => [object.parent],
      toManyRelations: (ProductCategoryEntity object) => {
        obx_int.RelInfo<ProductCategoryEntity>.toMany(26, object.id):
            object.subcategories,
        obx_int.RelInfo<ProductCategoryEntity>.toMany(27, object.id):
            object.products,
      },
      getId: (ProductCategoryEntity object) => object.id,
      setId: (ProductCategoryEntity object, int id) {
        object.id = id;
      },
      objectToFB: (ProductCategoryEntity object, fb.Builder fbb) {
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final codeOffset = object.code == null
            ? null
            : fbb.writeString(object.code!);
        final descriptionOffset = object.description == null
            ? null
            : fbb.writeString(object.description!);
        fbb.startTable(7);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addOffset(2, codeOffset);
        fbb.addOffset(3, descriptionOffset);
        fbb.addInt64(4, object.parent.targetId);
        fbb.addBool(5, object.isDeleted);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = ProductCategoryEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..code = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..description = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            14,
          );
        object.parent.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        object.parent.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<ProductCategoryEntity>(
          object.subcategories,
          store,
          obx_int.RelInfo<ProductCategoryEntity>.toMany(26, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<ProductCategoryEntity>(
          object.products,
          store,
          obx_int.RelInfo<ProductCategoryEntity>.toMany(27, object.id),
        );
        return object;
      },
    ),
    ProductEntity: obx_int.EntityDefinition<ProductEntity>(
      model: _entities[5],
      toOneRelations: (ProductEntity object) => [object.category],
      toManyRelations: (ProductEntity object) => {
        obx_int.RelInfo<ProductEntity>.toMany(28, object.id): object.batches,
      },
      getId: (ProductEntity object) => object.id,
      setId: (ProductEntity object, int id) {
        object.id = id;
      },
      objectToFB: (ProductEntity object, fb.Builder fbb) {
        final codeOffset = object.code == null
            ? null
            : fbb.writeString(object.code!);
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final descriptionOffset = object.description == null
            ? null
            : fbb.writeString(object.description!);
        final barcodeOffset = object.barcode == null
            ? null
            : fbb.writeString(object.barcode!);
        final hsnSacCodeOffset = object.hsnSacCode == null
            ? null
            : fbb.writeString(object.hsnSacCode!);
        fbb.startTable(14);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, codeOffset);
        fbb.addOffset(2, nameOffset);
        fbb.addOffset(3, descriptionOffset);
        fbb.addFloat64(4, object.price);
        fbb.addInt64(5, object.quantity);
        fbb.addInt64(6, object.category.targetId);
        fbb.addBool(7, object.isDeleted);
        fbb.addOffset(8, barcodeOffset);
        fbb.addFloat64(9, object.discount);
        fbb.addBool(10, object.isDiscountPercentage);
        fbb.addOffset(11, hsnSacCodeOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = ProductEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..code = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..description = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..price = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          )
          ..quantity = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            14,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          )
          ..barcode = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 20)
          ..discount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            22,
          )
          ..isDiscountPercentage = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            24,
          )
          ..hsnSacCode = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 26);
        object.category.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          16,
          0,
        );
        object.category.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<ProductEntity>(
          object.batches,
          store,
          obx_int.RelInfo<ProductEntity>.toMany(28, object.id),
        );
        return object;
      },
    ),
    ServiceEntity: obx_int.EntityDefinition<ServiceEntity>(
      model: _entities[6],
      toOneRelations: (ServiceEntity object) => [],
      toManyRelations: (ServiceEntity object) => {},
      getId: (ServiceEntity object) => object.id,
      setId: (ServiceEntity object, int id) {
        object.id = id;
      },
      objectToFB: (ServiceEntity object, fb.Builder fbb) {
        final codeOffset = object.code == null
            ? null
            : fbb.writeString(object.code!);
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final descriptionOffset = object.description == null
            ? null
            : fbb.writeString(object.description!);
        final hsnSacCodeOffset = object.hsnSacCode == null
            ? null
            : fbb.writeString(object.hsnSacCode!);
        final gstTypeOffset = object.gstType == null
            ? null
            : fbb.writeString(object.gstType!);
        fbb.startTable(15);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, codeOffset);
        fbb.addInt64(2, object.qty);
        fbb.addOffset(3, nameOffset);
        fbb.addOffset(4, descriptionOffset);
        fbb.addFloat64(5, object.price);
        fbb.addInt64(6, object.duration);
        fbb.addBool(7, object.isDeleted);
        fbb.addOffset(8, hsnSacCodeOffset);
        fbb.addOffset(9, gstTypeOffset);
        fbb.addFloat64(10, object.gstRate);
        fbb.addFloat64(11, object.cgstAmount);
        fbb.addFloat64(12, object.sgstAmount);
        fbb.addFloat64(13, object.igstAmount);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = ServiceEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..code = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..qty = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            8,
          )
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..description = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 12)
          ..price = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            14,
          )
          ..duration = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            16,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          )
          ..hsnSacCode = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 20)
          ..gstType = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 22)
          ..gstRate = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            24,
          )
          ..cgstAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            26,
          )
          ..sgstAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            28,
          )
          ..igstAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            30,
          );

        return object;
      },
    ),
    SubscriptionEntity: obx_int.EntityDefinition<SubscriptionEntity>(
      model: _entities[7],
      toOneRelations: (SubscriptionEntity object) => [],
      toManyRelations: (SubscriptionEntity object) => {},
      getId: (SubscriptionEntity object) => object.id,
      setId: (SubscriptionEntity object, int id) {
        object.id = id;
      },
      objectToFB: (SubscriptionEntity object, fb.Builder fbb) {
        final mobileNumberOffset = object.mobileNumber == null
            ? null
            : fbb.writeString(object.mobileNumber!);
        final planOffset = object.plan == null
            ? null
            : fbb.writeString(object.plan!);
        final statusOffset = object.status == null
            ? null
            : fbb.writeString(object.status!);
        fbb.startTable(10);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, mobileNumberOffset);
        fbb.addOffset(2, planOffset);
        fbb.addOffset(3, statusOffset);
        fbb.addInt64(4, object.startDate?.millisecondsSinceEpoch);
        fbb.addInt64(5, object.endDate?.millisecondsSinceEpoch);
        fbb.addInt64(6, object.createdAt?.millisecondsSinceEpoch);
        fbb.addInt64(7, object.updatedAt?.millisecondsSinceEpoch);
        fbb.addBool(8, object.isDeleted);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final startDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final endDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final createdAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          16,
        );
        final updatedAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          18,
        );
        final object = SubscriptionEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..mobileNumber = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..plan = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..status = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..startDate = startDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(startDateValue)
          ..endDate = endDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(endDateValue)
          ..createdAt = createdAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(createdAtValue)
          ..updatedAt = updatedAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(updatedAtValue)
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            20,
          );

        return object;
      },
    ),
    UserEntity: obx_int.EntityDefinition<UserEntity>(
      model: _entities[8],
      toOneRelations: (UserEntity object) => [],
      toManyRelations: (UserEntity object) => {},
      getId: (UserEntity object) => object.id,
      setId: (UserEntity object, int id) {
        object.id = id;
      },
      objectToFB: (UserEntity object, fb.Builder fbb) {
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        fbb.startTable(4);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addBool(2, object.isDeleted);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = UserEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            8,
          );

        return object;
      },
    ),
    WorkingHoursEntity: obx_int.EntityDefinition<WorkingHoursEntity>(
      model: _entities[9],
      toOneRelations: (WorkingHoursEntity object) => [object.employee],
      toManyRelations: (WorkingHoursEntity object) => {},
      getId: (WorkingHoursEntity object) => object.id,
      setId: (WorkingHoursEntity object, int id) {
        object.id = id;
      },
      objectToFB: (WorkingHoursEntity object, fb.Builder fbb) {
        fbb.startTable(9);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.weekday);
        fbb.addInt64(2, object.startHour);
        fbb.addInt64(3, object.startMinute);
        fbb.addInt64(4, object.endHour);
        fbb.addInt64(5, object.endMinute);
        fbb.addInt64(6, object.employee.targetId);
        fbb.addBool(7, object.isDeleted);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = WorkingHoursEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..weekday = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            6,
          )
          ..startHour = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            8,
          )
          ..startMinute = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..endHour = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          )
          ..endMinute = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            14,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          );
        object.employee.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          16,
          0,
        );
        object.employee.attach(store);
        return object;
      },
    ),
    AttendanceEntity: obx_int.EntityDefinition<AttendanceEntity>(
      model: _entities[10],
      toOneRelations: (AttendanceEntity object) => [object.employee],
      toManyRelations: (AttendanceEntity object) => {},
      getId: (AttendanceEntity object) => object.id,
      setId: (AttendanceEntity object, int id) {
        object.id = id;
      },
      objectToFB: (AttendanceEntity object, fb.Builder fbb) {
        final notesOffset = object.notes == null
            ? null
            : fbb.writeString(object.notes!);
        fbb.startTable(6);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.date?.millisecondsSinceEpoch);
        fbb.addOffset(2, notesOffset);
        fbb.addInt64(3, object.employee.targetId);
        fbb.addBool(4, object.isDeleted);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          6,
        );
        final object = AttendanceEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..date = dateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateValue)
          ..notes = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          );
        object.employee.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          10,
          0,
        );
        object.employee.attach(store);
        return object;
      },
    ),
    LeaveRequestEntity: obx_int.EntityDefinition<LeaveRequestEntity>(
      model: _entities[11],
      toOneRelations: (LeaveRequestEntity object) => [
        object.employee,
        object.leaveType,
        object.approver,
      ],
      toManyRelations: (LeaveRequestEntity object) => {},
      getId: (LeaveRequestEntity object) => object.id,
      setId: (LeaveRequestEntity object, int id) {
        object.id = id;
      },
      objectToFB: (LeaveRequestEntity object, fb.Builder fbb) {
        final reasonOffset = object.reason == null
            ? null
            : fbb.writeString(object.reason!);
        final decisionNotesOffset = object.decisionNotes == null
            ? null
            : fbb.writeString(object.decisionNotes!);
        fbb.startTable(12);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.startDate?.millisecondsSinceEpoch);
        fbb.addInt64(2, object.endDate?.millisecondsSinceEpoch);
        fbb.addOffset(3, reasonOffset);
        fbb.addInt64(4, object.requestDate?.millisecondsSinceEpoch);
        fbb.addInt64(5, object.decisionDate?.millisecondsSinceEpoch);
        fbb.addOffset(6, decisionNotesOffset);
        fbb.addInt64(7, object.employee.targetId);
        fbb.addInt64(8, object.leaveType.targetId);
        fbb.addInt64(9, object.approver.targetId);
        fbb.addBool(10, object.isDeleted);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final startDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          6,
        );
        final endDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          8,
        );
        final requestDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final decisionDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          14,
        );
        final object = LeaveRequestEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..startDate = startDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(startDateValue)
          ..endDate = endDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(endDateValue)
          ..reason = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..requestDate = requestDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(requestDateValue)
          ..decisionDate = decisionDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(decisionDateValue)
          ..decisionNotes = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 16)
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            24,
          );
        object.employee.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          18,
          0,
        );
        object.employee.attach(store);
        object.leaveType.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          20,
          0,
        );
        object.leaveType.attach(store);
        object.approver.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          22,
          0,
        );
        object.approver.attach(store);
        return object;
      },
    ),
    LeaveTypeEntity: obx_int.EntityDefinition<LeaveTypeEntity>(
      model: _entities[12],
      toOneRelations: (LeaveTypeEntity object) => [],
      toManyRelations: (LeaveTypeEntity object) => {
        obx_int.RelInfo<LeaveTypeEntity>.toMany(25, object.id):
            object.leaveRequests,
      },
      getId: (LeaveTypeEntity object) => object.id,
      setId: (LeaveTypeEntity object, int id) {
        object.id = id;
      },
      objectToFB: (LeaveTypeEntity object, fb.Builder fbb) {
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final descriptionOffset = object.description == null
            ? null
            : fbb.writeString(object.description!);
        fbb.startTable(7);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addOffset(2, descriptionOffset);
        fbb.addInt64(3, object.maxDaysPerYear);
        fbb.addBool(4, object.requiresApproval);
        fbb.addBool(5, object.isDeleted);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = LeaveTypeEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..description = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..maxDaysPerYear = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..requiresApproval = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            14,
          );
        obx_int.InternalToManyAccess.setRelInfo<LeaveTypeEntity>(
          object.leaveRequests,
          store,
          obx_int.RelInfo<LeaveTypeEntity>.toMany(25, object.id),
        );
        return object;
      },
    ),
    InventoryPartEntity: obx_int.EntityDefinition<InventoryPartEntity>(
      model: _entities[13],
      toOneRelations: (InventoryPartEntity object) => [],
      toManyRelations: (InventoryPartEntity object) => {},
      getId: (InventoryPartEntity object) => object.id,
      setId: (InventoryPartEntity object, int id) {
        object.id = id;
      },
      objectToFB: (InventoryPartEntity object, fb.Builder fbb) {
        final partNumberOffset = object.partNumber == null
            ? null
            : fbb.writeString(object.partNumber!);
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final descriptionOffset = object.description == null
            ? null
            : fbb.writeString(object.description!);
        fbb.startTable(8);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, partNumberOffset);
        fbb.addOffset(2, nameOffset);
        fbb.addOffset(3, descriptionOffset);
        fbb.addInt64(4, object.stockQuantity);
        fbb.addFloat64(5, object.unitPrice);
        fbb.addBool(6, object.isDeleted);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = InventoryPartEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..partNumber = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..description = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..stockQuantity = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          )
          ..unitPrice = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            14,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            16,
          );

        return object;
      },
    ),
    LoyaltyPointEntity: obx_int.EntityDefinition<LoyaltyPointEntity>(
      model: _entities[14],
      toOneRelations: (LoyaltyPointEntity object) => [object.customer],
      toManyRelations: (LoyaltyPointEntity object) => {},
      getId: (LoyaltyPointEntity object) => object.id,
      setId: (LoyaltyPointEntity object, int id) {
        object.id = id;
      },
      objectToFB: (LoyaltyPointEntity object, fb.Builder fbb) {
        final reasonOffset = object.reason == null
            ? null
            : fbb.writeString(object.reason!);
        fbb.startTable(8);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.points);
        fbb.addInt64(2, object.earnedDate?.millisecondsSinceEpoch);
        fbb.addInt64(3, object.expiryDate?.millisecondsSinceEpoch);
        fbb.addInt64(5, object.customer.targetId);
        fbb.addOffset(6, reasonOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final earnedDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          8,
        );
        final expiryDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final object = LoyaltyPointEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..points = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            6,
          )
          ..earnedDate = earnedDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(earnedDateValue)
          ..expiryDate = expiryDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(expiryDateValue)
          ..reason = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 16);
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.customer.attach(store);
        return object;
      },
    ),
    CustomerEntity: obx_int.EntityDefinition<CustomerEntity>(
      model: _entities[15],
      toOneRelations: (CustomerEntity object) => [],
      toManyRelations: (CustomerEntity object) => {
        obx_int.RelInfo<CustomerEntity>.toMany(13, object.id): object.feedbacks,
        obx_int.RelInfo<CustomerEntity>.toMany(14, object.id):
            object.memberships,
        obx_int.RelInfo<CustomerEntity>.toMany(15, object.id): object.invoices,
      },
      getId: (CustomerEntity object) => object.id,
      setId: (CustomerEntity object, int id) {
        object.id = id;
      },
      objectToFB: (CustomerEntity object, fb.Builder fbb) {
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final emailOffset = object.email == null
            ? null
            : fbb.writeString(object.email!);
        final phoneOffset = object.phone == null
            ? null
            : fbb.writeString(object.phone!);
        final genderOffset = object.gender == null
            ? null
            : fbb.writeString(object.gender!);
        final codeOffset = object.code == null
            ? null
            : fbb.writeString(object.code!);
        final typeOffset = object.type == null
            ? null
            : fbb.writeString(object.type!);
        final addressLine1Offset = object.addressLine1 == null
            ? null
            : fbb.writeString(object.addressLine1!);
        final addressLine2Offset = object.addressLine2 == null
            ? null
            : fbb.writeString(object.addressLine2!);
        final cityOffset = object.city == null
            ? null
            : fbb.writeString(object.city!);
        final stateOffset = object.state == null
            ? null
            : fbb.writeString(object.state!);
        final postalCodeOffset = object.postalCode == null
            ? null
            : fbb.writeString(object.postalCode!);
        final countryOffset = object.country == null
            ? null
            : fbb.writeString(object.country!);
        final paymentTermsOffset = object.paymentTerms == null
            ? null
            : fbb.writeString(object.paymentTerms!);
        final bankDetailsOffset = object.bankDetails == null
            ? null
            : fbb.writeString(object.bankDetails!);
        final panNumberOffset = object.panNumber == null
            ? null
            : fbb.writeString(object.panNumber!);
        final gstINOffset = object.gstIN == null
            ? null
            : fbb.writeString(object.gstIN!);
        final loyaltyIDOffset = object.loyaltyID == null
            ? null
            : fbb.writeString(object.loyaltyID!);
        final customerGroupOffset = object.customerGroup == null
            ? null
            : fbb.writeString(object.customerGroup!);
        final priceLevelOffset = object.priceLevel == null
            ? null
            : fbb.writeString(object.priceLevel!);
        final outletIdOffset = object.outletId == null
            ? null
            : fbb.writeString(object.outletId!);
        fbb.startTable(40);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addOffset(2, emailOffset);
        fbb.addOffset(3, phoneOffset);
        fbb.addOffset(5, genderOffset);
        fbb.addOffset(11, codeOffset);
        fbb.addOffset(12, typeOffset);
        fbb.addOffset(13, addressLine1Offset);
        fbb.addOffset(14, addressLine2Offset);
        fbb.addOffset(15, cityOffset);
        fbb.addOffset(16, stateOffset);
        fbb.addOffset(17, postalCodeOffset);
        fbb.addOffset(18, countryOffset);
        fbb.addFloat64(19, object.creditLimit);
        fbb.addInt64(20, object.creditDays);
        fbb.addFloat64(21, object.outstandingBalance);
        fbb.addOffset(22, paymentTermsOffset);
        fbb.addOffset(23, bankDetailsOffset);
        fbb.addOffset(24, panNumberOffset);
        fbb.addOffset(25, gstINOffset);
        fbb.addOffset(26, loyaltyIDOffset);
        fbb.addInt64(27, object.loyaltyPoints);
        fbb.addOffset(28, customerGroupOffset);
        fbb.addOffset(29, priceLevelOffset);
        fbb.addFloat64(30, object.discountPercentage);
        fbb.addInt64(31, object.dateOfBirth?.millisecondsSinceEpoch);
        fbb.addInt64(32, object.anniversaryDate?.millisecondsSinceEpoch);
        fbb.addInt64(33, object.createdAt?.millisecondsSinceEpoch);
        fbb.addInt64(34, object.createdBy?.millisecondsSinceEpoch);
        fbb.addInt64(35, object.lastUpdateDate?.millisecondsSinceEpoch);
        fbb.addInt64(36, object.lastUpdatedBy?.millisecondsSinceEpoch);
        fbb.addOffset(37, outletIdOffset);
        fbb.addBool(38, object.isActive);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateOfBirthValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          66,
        );
        final anniversaryDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          68,
        );
        final createdAtValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          70,
        );
        final createdByValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          72,
        );
        final lastUpdateDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          74,
        );
        final lastUpdatedByValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          76,
        );
        final object = CustomerEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..email = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..phone = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..gender = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 14)
          ..code = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 26)
          ..type = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 28)
          ..addressLine1 = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 30)
          ..addressLine2 = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 32)
          ..city = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 34)
          ..state = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 36)
          ..postalCode = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 38)
          ..country = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 40)
          ..creditLimit = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            42,
          )
          ..creditDays = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            44,
          )
          ..outstandingBalance = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            46,
          )
          ..paymentTerms = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 48)
          ..bankDetails = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 50)
          ..panNumber = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 52)
          ..gstIN = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 54)
          ..loyaltyID = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 56)
          ..loyaltyPoints = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            58,
          )
          ..customerGroup = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 60)
          ..priceLevel = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 62)
          ..discountPercentage = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            64,
          )
          ..dateOfBirth = dateOfBirthValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateOfBirthValue)
          ..anniversaryDate = anniversaryDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(anniversaryDateValue)
          ..createdAt = createdAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(createdAtValue)
          ..createdBy = createdByValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(createdByValue)
          ..lastUpdateDate = lastUpdateDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(lastUpdateDateValue)
          ..lastUpdatedBy = lastUpdatedByValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(lastUpdatedByValue)
          ..outletId = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 78)
          ..isActive = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            80,
          );
        obx_int.InternalToManyAccess.setRelInfo<CustomerEntity>(
          object.feedbacks,
          store,
          obx_int.RelInfo<CustomerEntity>.toMany(13, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<CustomerEntity>(
          object.memberships,
          store,
          obx_int.RelInfo<CustomerEntity>.toMany(14, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<CustomerEntity>(
          object.invoices,
          store,
          obx_int.RelInfo<CustomerEntity>.toMany(15, object.id),
        );
        return object;
      },
    ),
    RewardEntity: obx_int.EntityDefinition<RewardEntity>(
      model: _entities[16],
      toOneRelations: (RewardEntity object) => [],
      toManyRelations: (RewardEntity object) => {},
      getId: (RewardEntity object) => object.id,
      setId: (RewardEntity object, int id) {
        object.id = id;
      },
      objectToFB: (RewardEntity object, fb.Builder fbb) {
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final descriptionOffset = object.description == null
            ? null
            : fbb.writeString(object.description!);
        fbb.startTable(7);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addOffset(2, descriptionOffset);
        fbb.addInt64(3, object.pointsRequired);
        fbb.addInt64(4, object.stock);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = RewardEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..description = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..pointsRequired = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..stock = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          );

        return object;
      },
    ),
    CompanyProfileEntity: obx_int.EntityDefinition<CompanyProfileEntity>(
      model: _entities[17],
      toOneRelations: (CompanyProfileEntity object) => [],
      toManyRelations: (CompanyProfileEntity object) => {},
      getId: (CompanyProfileEntity object) => object.id,
      setId: (CompanyProfileEntity object, int id) {
        object.id = id;
      },
      objectToFB: (CompanyProfileEntity object, fb.Builder fbb) {
        final nameOffset = object.name == null
            ? null
            : fbb.writeString(object.name!);
        final emailOffset = object.email == null
            ? null
            : fbb.writeString(object.email!);
        final phoneOffset = object.phone == null
            ? null
            : fbb.writeString(object.phone!);
        final stateOffset = object.state == null
            ? null
            : fbb.writeString(object.state!);
        final countryOffset = object.country == null
            ? null
            : fbb.writeString(object.country!);
        final businessTypeOffset = object.businessType == null
            ? null
            : fbb.writeString(object.businessType!);
        final addressLine1Offset = object.addressLine1 == null
            ? null
            : fbb.writeString(object.addressLine1!);
        final addressLine2Offset = object.addressLine2 == null
            ? null
            : fbb.writeString(object.addressLine2!);
        final cityOffset = object.city == null
            ? null
            : fbb.writeString(object.city!);
        final postalCodeOffset = object.postalCode == null
            ? null
            : fbb.writeString(object.postalCode!);
        final panNumberOffset = object.panNumber == null
            ? null
            : fbb.writeString(object.panNumber!);
        final gstINOffset = object.gstIN == null
            ? null
            : fbb.writeString(object.gstIN!);
        final vatTRNOffset = object.vatTRN == null
            ? null
            : fbb.writeString(object.vatTRN!);
        final tinNumOffset = object.tinNum == null
            ? null
            : fbb.writeString(object.tinNum!);
        final companyRegNumOffset = object.companyRegNum == null
            ? null
            : fbb.writeString(object.companyRegNum!);
        final bankNameOffset = object.bankName == null
            ? null
            : fbb.writeString(object.bankName!);
        final bankAccNumOffset = object.bankAccNum == null
            ? null
            : fbb.writeString(object.bankAccNum!);
        final ifscCodeOffset = object.ifscCode == null
            ? null
            : fbb.writeString(object.ifscCode!);
        final currencyCodeOffset = object.currencyCode == null
            ? null
            : fbb.writeString(object.currencyCode!);
        final taxationModelOffset = object.taxationModel == null
            ? null
            : fbb.writeString(object.taxationModel!);
        final createdByOffset = object.createdBy == null
            ? null
            : fbb.writeString(object.createdBy!);
        final lastUpdateByOffset = object.lastUpdateBy == null
            ? null
            : fbb.writeString(object.lastUpdateBy!);
        fbb.startTable(31);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, nameOffset);
        fbb.addOffset(2, emailOffset);
        fbb.addOffset(3, phoneOffset);
        fbb.addOffset(5, stateOffset);
        fbb.addOffset(6, countryOffset);
        fbb.addInt64(8, object.code);
        fbb.addOffset(9, businessTypeOffset);
        fbb.addOffset(10, addressLine1Offset);
        fbb.addOffset(11, addressLine2Offset);
        fbb.addOffset(12, cityOffset);
        fbb.addOffset(13, postalCodeOffset);
        fbb.addOffset(14, panNumberOffset);
        fbb.addOffset(15, gstINOffset);
        fbb.addOffset(16, vatTRNOffset);
        fbb.addOffset(17, tinNumOffset);
        fbb.addOffset(18, companyRegNumOffset);
        fbb.addOffset(19, bankNameOffset);
        fbb.addOffset(20, bankAccNumOffset);
        fbb.addOffset(21, ifscCodeOffset);
        fbb.addOffset(22, currencyCodeOffset);
        fbb.addInt64(23, object.financialYearStart?.millisecondsSinceEpoch);
        fbb.addOffset(24, taxationModelOffset);
        fbb.addInt64(25, object.createdDate?.millisecondsSinceEpoch);
        fbb.addOffset(26, createdByOffset);
        fbb.addInt64(27, object.lastUpdateDate?.millisecondsSinceEpoch);
        fbb.addOffset(28, lastUpdateByOffset);
        fbb.addBool(29, object.isActive);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final financialYearStartValue = const fb.Int64Reader()
            .vTableGetNullable(buffer, rootOffset, 50);
        final createdDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          54,
        );
        final lastUpdateDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          58,
        );
        final object = CompanyProfileEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..name = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..email = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..phone = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..state = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 14)
          ..country = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 16)
          ..code = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            20,
          )
          ..businessType = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 22)
          ..addressLine1 = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 24)
          ..addressLine2 = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 26)
          ..city = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 28)
          ..postalCode = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 30)
          ..panNumber = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 32)
          ..gstIN = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 34)
          ..vatTRN = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 36)
          ..tinNum = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 38)
          ..companyRegNum = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 40)
          ..bankName = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 42)
          ..bankAccNum = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 44)
          ..ifscCode = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 46)
          ..currencyCode = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 48)
          ..financialYearStart = financialYearStartValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(financialYearStartValue)
          ..taxationModel = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 52)
          ..createdDate = createdDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(createdDateValue)
          ..createdBy = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 56)
          ..lastUpdateDate = lastUpdateDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(lastUpdateDateValue)
          ..lastUpdateBy = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 60)
          ..isActive = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            62,
          );

        return object;
      },
    ),
    WaitlistEntity: obx_int.EntityDefinition<WaitlistEntity>(
      model: _entities[18],
      toOneRelations: (WaitlistEntity object) => [object.customer],
      toManyRelations: (WaitlistEntity object) => {
        obx_int.RelInfo<WaitlistEntity>.toMany(2, object.id): object.services,
      },
      getId: (WaitlistEntity object) => object.id,
      setId: (WaitlistEntity object, int id) {
        object.id = id;
      },
      objectToFB: (WaitlistEntity object, fb.Builder fbb) {
        final notesOffset = object.notes == null
            ? null
            : fbb.writeString(object.notes!);
        fbb.startTable(5);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.preferredDate?.millisecondsSinceEpoch);
        fbb.addOffset(2, notesOffset);
        fbb.addInt64(3, object.customer.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final preferredDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          6,
        );
        final object = WaitlistEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..preferredDate = preferredDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(preferredDateValue)
          ..notes = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8);
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          10,
          0,
        );
        object.customer.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<WaitlistEntity>(
          object.services,
          store,
          obx_int.RelInfo<WaitlistEntity>.toMany(2, object.id),
        );
        return object;
      },
    ),
    FeedbackEntity: obx_int.EntityDefinition<FeedbackEntity>(
      model: _entities[19],
      toOneRelations: (FeedbackEntity object) => [object.customer],
      toManyRelations: (FeedbackEntity object) => {},
      getId: (FeedbackEntity object) => object.id,
      setId: (FeedbackEntity object, int id) {
        object.id = id;
      },
      objectToFB: (FeedbackEntity object, fb.Builder fbb) {
        final commentOffset = object.comment == null
            ? null
            : fbb.writeString(object.comment!);
        fbb.startTable(6);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.rating);
        fbb.addOffset(2, commentOffset);
        fbb.addInt64(3, object.date?.millisecondsSinceEpoch);
        fbb.addInt64(4, object.customer.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final object = FeedbackEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..rating = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            6,
          )
          ..comment = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..date = dateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateValue);
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        object.customer.attach(store);
        return object;
      },
    ),
    MembershipEntity: obx_int.EntityDefinition<MembershipEntity>(
      model: _entities[20],
      toOneRelations: (MembershipEntity object) => [object.customer],
      toManyRelations: (MembershipEntity object) => {},
      getId: (MembershipEntity object) => object.id,
      setId: (MembershipEntity object, int id) {
        object.id = id;
      },
      objectToFB: (MembershipEntity object, fb.Builder fbb) {
        final typeOffset = object.type == null
            ? null
            : fbb.writeString(object.type!);
        fbb.startTable(7);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, typeOffset);
        fbb.addFloat64(2, object.discount);
        fbb.addInt64(3, object.startDate?.millisecondsSinceEpoch);
        fbb.addInt64(4, object.endDate?.millisecondsSinceEpoch);
        fbb.addInt64(5, object.customer.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final startDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          10,
        );
        final endDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final object = MembershipEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..type = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..discount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            8,
          )
          ..startDate = startDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(startDateValue)
          ..endDate = endDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(endDateValue);
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          14,
          0,
        );
        object.customer.attach(store);
        return object;
      },
    ),
    CompanyBranchProfileEntity:
        obx_int.EntityDefinition<CompanyBranchProfileEntity>(
          model: _entities[21],
          toOneRelations: (CompanyBranchProfileEntity object) => [],
          toManyRelations: (CompanyBranchProfileEntity object) => {},
          getId: (CompanyBranchProfileEntity object) => object.id,
          setId: (CompanyBranchProfileEntity object, int id) {
            object.id = id;
          },
          objectToFB: (CompanyBranchProfileEntity object, fb.Builder fbb) {
            final codeOffset = object.code == null
                ? null
                : fbb.writeString(object.code!);
            final branchNameOffset = object.branchName == null
                ? null
                : fbb.writeString(object.branchName!);
            final branchTypeOffset = object.branchType == null
                ? null
                : fbb.writeString(object.branchType!);
            final addressLine1Offset = object.addressLine1 == null
                ? null
                : fbb.writeString(object.addressLine1!);
            final addressLine2Offset = object.addressLine2 == null
                ? null
                : fbb.writeString(object.addressLine2!);
            final cityOffset = object.city == null
                ? null
                : fbb.writeString(object.city!);
            final stateOffset = object.state == null
                ? null
                : fbb.writeString(object.state!);
            final postalCodeOffset = object.postalCode == null
                ? null
                : fbb.writeString(object.postalCode!);
            final countryOffset = object.country == null
                ? null
                : fbb.writeString(object.country!);
            final emailOffset = object.email == null
                ? null
                : fbb.writeString(object.email!);
            final phoneOffset = object.phone == null
                ? null
                : fbb.writeString(object.phone!);
            final gstINOffset = object.gstIN == null
                ? null
                : fbb.writeString(object.gstIN!);
            final vatTRNOffset = object.vatTRN == null
                ? null
                : fbb.writeString(object.vatTRN!);
            final drugLicNumOffset = object.drugLicNum == null
                ? null
                : fbb.writeString(object.drugLicNum!);
            final fssaiLicNumOffset = object.fssaiLicNum == null
                ? null
                : fbb.writeString(object.fssaiLicNum!);
            final outletGroupOffset = object.outletGroup == null
                ? null
                : fbb.writeString(object.outletGroup!);
            final warehouseIdOffset = object.warehouseId == null
                ? null
                : fbb.writeString(object.warehouseId!);
            final priceLevelDefaultOffset = object.priceLevelDefault == null
                ? null
                : fbb.writeString(object.priceLevelDefault!);
            final barcodePrefixOffset = object.barcodePrefix == null
                ? null
                : fbb.writeString(object.barcodePrefix!);
            final zoneClassificationOffset = object.zoneClassification == null
                ? null
                : fbb.writeString(object.zoneClassification!);
            final landmarkOffset = object.landmark == null
                ? null
                : fbb.writeString(object.landmark!);
            final createdByOffset = object.createdBy == null
                ? null
                : fbb.writeString(object.createdBy!);
            final lastUpdatedByOffset = object.lastUpdatedBy == null
                ? null
                : fbb.writeString(object.lastUpdatedBy!);
            fbb.startTable(30);
            fbb.addInt64(0, object.id);
            fbb.addOffset(1, codeOffset);
            fbb.addInt64(2, object.companyId);
            fbb.addOffset(3, branchNameOffset);
            fbb.addOffset(4, branchTypeOffset);
            fbb.addOffset(5, addressLine1Offset);
            fbb.addOffset(6, addressLine2Offset);
            fbb.addOffset(7, cityOffset);
            fbb.addOffset(8, stateOffset);
            fbb.addOffset(9, postalCodeOffset);
            fbb.addOffset(10, countryOffset);
            fbb.addOffset(11, emailOffset);
            fbb.addOffset(12, phoneOffset);
            fbb.addOffset(13, gstINOffset);
            fbb.addOffset(14, vatTRNOffset);
            fbb.addOffset(15, drugLicNumOffset);
            fbb.addOffset(16, fssaiLicNumOffset);
            fbb.addOffset(17, outletGroupOffset);
            fbb.addOffset(18, warehouseIdOffset);
            fbb.addOffset(19, priceLevelDefaultOffset);
            fbb.addInt64(20, object.reorderLevel);
            fbb.addOffset(21, barcodePrefixOffset);
            fbb.addOffset(22, zoneClassificationOffset);
            fbb.addOffset(23, landmarkOffset);
            fbb.addInt64(24, object.createdDate?.millisecondsSinceEpoch);
            fbb.addOffset(25, createdByOffset);
            fbb.addInt64(26, object.lastUpdatedDate?.millisecondsSinceEpoch);
            fbb.addOffset(27, lastUpdatedByOffset);
            fbb.addBool(28, object.isActive);
            fbb.finish(fbb.endTable());
            return object.id;
          },
          objectFromFB: (obx.Store store, ByteData fbData) {
            final buffer = fb.BufferContext(fbData);
            final rootOffset = buffer.derefObject(0);
            final createdDateValue = const fb.Int64Reader().vTableGetNullable(
              buffer,
              rootOffset,
              52,
            );
            final lastUpdatedDateValue = const fb.Int64Reader()
                .vTableGetNullable(buffer, rootOffset, 56);
            final object = CompanyBranchProfileEntity()
              ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
              ..code = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 6)
              ..companyId = const fb.Int64Reader().vTableGetNullable(
                buffer,
                rootOffset,
                8,
              )
              ..branchName = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 10)
              ..branchType = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 12)
              ..addressLine1 = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 14)
              ..addressLine2 = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 16)
              ..city = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 18)
              ..state = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 20)
              ..postalCode = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 22)
              ..country = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 24)
              ..email = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 26)
              ..phone = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 28)
              ..gstIN = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 30)
              ..vatTRN = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 32)
              ..drugLicNum = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 34)
              ..fssaiLicNum = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 36)
              ..outletGroup = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 38)
              ..warehouseId = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 40)
              ..priceLevelDefault = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 42)
              ..reorderLevel = const fb.Int64Reader().vTableGetNullable(
                buffer,
                rootOffset,
                44,
              )
              ..barcodePrefix = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 46)
              ..zoneClassification = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 48)
              ..landmark = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 50)
              ..createdDate = createdDateValue == null
                  ? null
                  : DateTime.fromMillisecondsSinceEpoch(createdDateValue)
              ..createdBy = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 54)
              ..lastUpdatedDate = lastUpdatedDateValue == null
                  ? null
                  : DateTime.fromMillisecondsSinceEpoch(lastUpdatedDateValue)
              ..lastUpdatedBy = const fb.StringReader(
                asciiOptimization: true,
              ).vTableGetNullable(buffer, rootOffset, 58)
              ..isActive = const fb.BoolReader().vTableGetNullable(
                buffer,
                rootOffset,
                60,
              );

            return object;
          },
        ),
    HeldCartEntity: obx_int.EntityDefinition<HeldCartEntity>(
      model: _entities[22],
      toOneRelations: (HeldCartEntity object) => [],
      toManyRelations: (HeldCartEntity object) => {},
      getId: (HeldCartEntity object) => object.id,
      setId: (HeldCartEntity object, int id) {
        object.id = id;
      },
      objectToFB: (HeldCartEntity object, fb.Builder fbb) {
        final holdIdOffset = object.holdId == null
            ? null
            : fbb.writeString(object.holdId!);
        final itemsJsonOffset = object.itemsJson == null
            ? null
            : fbb.writeString(object.itemsJson!);
        final servicesJsonOffset = object.servicesJson == null
            ? null
            : fbb.writeString(object.servicesJson!);
        fbb.startTable(9);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.customerId);
        fbb.addOffset(2, holdIdOffset);
        fbb.addOffset(3, itemsJsonOffset);
        fbb.addOffset(4, servicesJsonOffset);
        fbb.addFloat64(5, object.invoiceDiscount);
        fbb.addBool(6, object.isInvoiceDiscountPercentage);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = HeldCartEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..customerId = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            6,
          )
          ..holdId = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 8)
          ..itemsJson = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..servicesJson = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 12)
          ..invoiceDiscount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            14,
          )
          ..isInvoiceDiscountPercentage = const fb.BoolReader()
              .vTableGetNullable(buffer, rootOffset, 16);

        return object;
      },
    ),
    CouponEntity: obx_int.EntityDefinition<CouponEntity>(
      model: _entities[23],
      toOneRelations: (CouponEntity object) => [],
      toManyRelations: (CouponEntity object) => {},
      getId: (CouponEntity object) => object.id,
      setId: (CouponEntity object, int id) {
        object.id = id;
      },
      objectToFB: (CouponEntity object, fb.Builder fbb) {
        final codeOffset = object.code == null
            ? null
            : fbb.writeString(object.code!);
        fbb.startTable(7);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, codeOffset);
        fbb.addBool(2, object.isPercentage);
        fbb.addFloat64(3, object.value);
        fbb.addInt64(4, object.expiryDate?.millisecondsSinceEpoch);
        fbb.addBool(5, object.isActive);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final expiryDateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          12,
        );
        final object = CouponEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..code = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..isPercentage = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            8,
          )
          ..value = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..expiryDate = expiryDateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(expiryDateValue)
          ..isActive = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            14,
          );

        return object;
      },
    ),
    SaleReturnEntity: obx_int.EntityDefinition<SaleReturnEntity>(
      model: _entities[24],
      toOneRelations: (SaleReturnEntity object) => [
        object.customer,
        object.originalInvoice,
      ],
      toManyRelations: (SaleReturnEntity object) => {
        obx_int.RelInfo<SaleReturnItemEntity>.toOneBacklink(
          2,
          object.id,
          (SaleReturnItemEntity srcObject) => srcObject.saleReturn,
        ): object.items,
        obx_int.RelInfo<SaleReturnServiceEntity>.toOneBacklink(
          2,
          object.id,
          (SaleReturnServiceEntity srcObject) => srcObject.saleReturn,
        ): object.services,
      },
      getId: (SaleReturnEntity object) => object.id,
      setId: (SaleReturnEntity object, int id) {
        object.id = id;
      },
      objectToFB: (SaleReturnEntity object, fb.Builder fbb) {
        final reasonOffset = object.reason == null
            ? null
            : fbb.writeString(object.reason!);
        final returnNumberOffset = object.returnNumber == null
            ? null
            : fbb.writeString(object.returnNumber!);
        final statusOffset = object.status == null
            ? null
            : fbb.writeString(object.status!);
        fbb.startTable(17);
        fbb.addInt64(0, object.id);
        fbb.addFloat64(1, object.totalReturnAmount);
        fbb.addOffset(3, reasonOffset);
        fbb.addInt64(7, object.customer.targetId);
        fbb.addOffset(12, returnNumberOffset);
        fbb.addInt64(13, object.date?.millisecondsSinceEpoch);
        fbb.addInt64(14, object.originalInvoice.targetId);
        fbb.addOffset(15, statusOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          30,
        );
        final object = SaleReturnEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..totalReturnAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            6,
          )
          ..reason = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 10)
          ..returnNumber = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 28)
          ..date = dateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateValue)
          ..status = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 34);
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          18,
          0,
        );
        object.customer.attach(store);
        object.originalInvoice.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          32,
          0,
        );
        object.originalInvoice.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<SaleReturnEntity>(
          object.items,
          store,
          obx_int.RelInfo<SaleReturnItemEntity>.toOneBacklink(
            2,
            object.id,
            (SaleReturnItemEntity srcObject) => srcObject.saleReturn,
          ),
        );
        obx_int.InternalToManyAccess.setRelInfo<SaleReturnEntity>(
          object.services,
          store,
          obx_int.RelInfo<SaleReturnServiceEntity>.toOneBacklink(
            2,
            object.id,
            (SaleReturnServiceEntity srcObject) => srcObject.saleReturn,
          ),
        );
        return object;
      },
    ),
    SaleReturnItemEntity: obx_int.EntityDefinition<SaleReturnItemEntity>(
      model: _entities[25],
      toOneRelations: (SaleReturnItemEntity object) => [
        object.saleReturn,
        object.product,
        object.batch,
      ],
      toManyRelations: (SaleReturnItemEntity object) => {},
      getId: (SaleReturnItemEntity object) => object.id,
      setId: (SaleReturnItemEntity object, int id) {
        object.id = id;
      },
      objectToFB: (SaleReturnItemEntity object, fb.Builder fbb) {
        final gstTypeOffset = object.gstType == null
            ? null
            : fbb.writeString(object.gstType!);
        fbb.startTable(16);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.saleReturn.targetId);
        fbb.addInt64(3, object.quantity);
        fbb.addFloat64(7, object.unitPrice);
        fbb.addFloat64(8, object.discount);
        fbb.addBool(9, object.isDiscountPercentage);
        fbb.addOffset(10, gstTypeOffset);
        fbb.addFloat64(11, object.gstRate);
        fbb.addInt64(13, object.product.targetId);
        fbb.addInt64(14, object.batch.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = SaleReturnItemEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..quantity = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..unitPrice = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          )
          ..discount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            20,
          )
          ..isDiscountPercentage = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            22,
          )
          ..gstType = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 24)
          ..gstRate = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            26,
          );
        object.saleReturn.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          6,
          0,
        );
        object.saleReturn.attach(store);
        object.product.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          30,
          0,
        );
        object.product.attach(store);
        object.batch.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          32,
          0,
        );
        object.batch.attach(store);
        return object;
      },
    ),
    SaleReturnServiceEntity: obx_int.EntityDefinition<SaleReturnServiceEntity>(
      model: _entities[26],
      toOneRelations: (SaleReturnServiceEntity object) => [
        object.saleReturn,
        object.service,
      ],
      toManyRelations: (SaleReturnServiceEntity object) => {},
      getId: (SaleReturnServiceEntity object) => object.id,
      setId: (SaleReturnServiceEntity object, int id) {
        object.id = id;
      },
      objectToFB: (SaleReturnServiceEntity object, fb.Builder fbb) {
        final gstTypeOffset = object.gstType == null
            ? null
            : fbb.writeString(object.gstType!);
        fbb.startTable(15);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.saleReturn.targetId);
        fbb.addInt64(3, object.quantity);
        fbb.addFloat64(7, object.price);
        fbb.addFloat64(8, object.discount);
        fbb.addBool(9, object.isDiscountPercentage);
        fbb.addOffset(10, gstTypeOffset);
        fbb.addFloat64(11, object.gstRate);
        fbb.addInt64(13, object.service.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = SaleReturnServiceEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..quantity = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..price = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          )
          ..discount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            20,
          )
          ..isDiscountPercentage = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            22,
          )
          ..gstType = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 24)
          ..gstRate = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            26,
          );
        object.saleReturn.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          6,
          0,
        );
        object.saleReturn.attach(store);
        object.service.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          30,
          0,
        );
        object.service.attach(store);
        return object;
      },
    ),
    SaleEntryEntity: obx_int.EntityDefinition<SaleEntryEntity>(
      model: _entities[27],
      toOneRelations: (SaleEntryEntity object) => [object.customer],
      toManyRelations: (SaleEntryEntity object) => {
        obx_int.RelInfo<SaleEntryEntity>.toMany(31, object.id): object.items,
        obx_int.RelInfo<SaleEntryEntity>.toMany(32, object.id): object.services,
        obx_int.RelInfo<SaleEntryEntity>.toMany(33, object.id): object.payments,
      },
      getId: (SaleEntryEntity object) => object.id,
      setId: (SaleEntryEntity object, int id) {
        object.id = id;
      },
      objectToFB: (SaleEntryEntity object, fb.Builder fbb) {
        final invoiceNumberOffset = object.invoiceNumber == null
            ? null
            : fbb.writeString(object.invoiceNumber!);
        final statusOffset = object.status == null
            ? null
            : fbb.writeString(object.status!);
        final employeeIdOffset = object.employeeId == null
            ? null
            : fbb.writeString(object.employeeId!);
        fbb.startTable(11);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, invoiceNumberOffset);
        fbb.addInt64(2, object.date?.millisecondsSinceEpoch);
        fbb.addFloat64(3, object.totalBillAmount);
        fbb.addFloat64(4, object.amountPaid);
        fbb.addOffset(5, statusOffset);
        fbb.addFloat64(6, object.invoiceDiscount);
        fbb.addBool(7, object.isInvoiceDiscountPercentage);
        fbb.addOffset(8, employeeIdOffset);
        fbb.addInt64(9, object.customer.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final dateValue = const fb.Int64Reader().vTableGetNullable(
          buffer,
          rootOffset,
          8,
        );
        final object = SaleEntryEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..invoiceNumber = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 6)
          ..date = dateValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(dateValue)
          ..totalBillAmount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..amountPaid = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          )
          ..status = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 14)
          ..invoiceDiscount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            16,
          )
          ..isInvoiceDiscountPercentage = const fb.BoolReader()
              .vTableGetNullable(buffer, rootOffset, 18)
          ..employeeId = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 20);
        object.customer.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          22,
          0,
        );
        object.customer.attach(store);
        obx_int.InternalToManyAccess.setRelInfo<SaleEntryEntity>(
          object.items,
          store,
          obx_int.RelInfo<SaleEntryEntity>.toMany(31, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<SaleEntryEntity>(
          object.services,
          store,
          obx_int.RelInfo<SaleEntryEntity>.toMany(32, object.id),
        );
        obx_int.InternalToManyAccess.setRelInfo<SaleEntryEntity>(
          object.payments,
          store,
          obx_int.RelInfo<SaleEntryEntity>.toMany(33, object.id),
        );
        return object;
      },
    ),
    SaleEntryItemEntity: obx_int.EntityDefinition<SaleEntryItemEntity>(
      model: _entities[28],
      toOneRelations: (SaleEntryItemEntity object) => [
        object.invoice,
        object.product,
        object.batch,
      ],
      toManyRelations: (SaleEntryItemEntity object) => {},
      getId: (SaleEntryItemEntity object) => object.id,
      setId: (SaleEntryItemEntity object, int id) {
        object.id = id;
      },
      objectToFB: (SaleEntryItemEntity object, fb.Builder fbb) {
        final gstTypeOffset = object.gstType == null
            ? null
            : fbb.writeString(object.gstType!);
        fbb.startTable(14);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.quantity);
        fbb.addFloat64(2, object.unitPrice);
        fbb.addFloat64(3, object.discount);
        fbb.addBool(4, object.isDiscountPercentage);
        fbb.addOffset(5, gstTypeOffset);
        fbb.addFloat64(6, object.gstRate);
        fbb.addBool(7, object.isHeld);
        fbb.addBool(8, object.isDeleted);
        fbb.addInt64(9, object.invoice.targetId);
        fbb.addInt64(10, object.product.targetId);
        fbb.addInt64(11, object.batch.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = SaleEntryItemEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..quantity = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            6,
          )
          ..unitPrice = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            8,
          )
          ..discount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..isDiscountPercentage = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          )
          ..gstType = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 14)
          ..gstRate = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            16,
          )
          ..isHeld = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            20,
          );
        object.invoice.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          22,
          0,
        );
        object.invoice.attach(store);
        object.product.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          24,
          0,
        );
        object.product.attach(store);
        object.batch.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          26,
          0,
        );
        object.batch.attach(store);
        return object;
      },
    ),
    SaleEntryServicesEntity: obx_int.EntityDefinition<SaleEntryServicesEntity>(
      model: _entities[29],
      toOneRelations: (SaleEntryServicesEntity object) => [
        object.invoice,
        object.service,
      ],
      toManyRelations: (SaleEntryServicesEntity object) => {},
      getId: (SaleEntryServicesEntity object) => object.id,
      setId: (SaleEntryServicesEntity object, int id) {
        object.id = id;
      },
      objectToFB: (SaleEntryServicesEntity object, fb.Builder fbb) {
        final gstTypeOffset = object.gstType == null
            ? null
            : fbb.writeString(object.gstType!);
        fbb.startTable(13);
        fbb.addInt64(0, object.id);
        fbb.addInt64(1, object.quantity);
        fbb.addFloat64(2, object.price);
        fbb.addFloat64(3, object.discount);
        fbb.addBool(4, object.isDiscountPercentage);
        fbb.addOffset(5, gstTypeOffset);
        fbb.addFloat64(6, object.gstRate);
        fbb.addBool(7, object.isHeld);
        fbb.addBool(8, object.isDeleted);
        fbb.addInt64(9, object.invoice.targetId);
        fbb.addInt64(10, object.service.targetId);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);

        final object = SaleEntryServicesEntity()
          ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
          ..quantity = const fb.Int64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            6,
          )
          ..price = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            8,
          )
          ..discount = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            10,
          )
          ..isDiscountPercentage = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            12,
          )
          ..gstType = const fb.StringReader(
            asciiOptimization: true,
          ).vTableGetNullable(buffer, rootOffset, 14)
          ..gstRate = const fb.Float64Reader().vTableGetNullable(
            buffer,
            rootOffset,
            16,
          )
          ..isHeld = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            18,
          )
          ..isDeleted = const fb.BoolReader().vTableGetNullable(
            buffer,
            rootOffset,
            20,
          );
        object.invoice.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          22,
          0,
        );
        object.invoice.attach(store);
        object.service.targetId = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          24,
          0,
        );
        object.service.attach(store);
        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AppointmentEntity] entity fields to define ObjectBox queries.
class AppointmentEntity_ {
  /// See [AppointmentEntity.id].
  static final id = obx.QueryIntegerProperty<AppointmentEntity>(
    _entities[0].properties[0],
  );

  /// See [AppointmentEntity.dateTime].
  static final dateTime = obx.QueryDateProperty<AppointmentEntity>(
    _entities[0].properties[1],
  );

  /// See [AppointmentEntity.notes].
  static final notes = obx.QueryStringProperty<AppointmentEntity>(
    _entities[0].properties[2],
  );

  /// See [AppointmentEntity.client].
  static final client =
      obx.QueryRelationToOne<AppointmentEntity, CustomerEntity>(
        _entities[0].properties[3],
      );

  /// See [AppointmentEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<AppointmentEntity>(
    _entities[0].properties[4],
  );

  /// See [AppointmentEntity.type].
  static final type = obx.QueryStringProperty<AppointmentEntity>(
    _entities[0].properties[5],
  );

  /// See [AppointmentEntity.sendReminder].
  static final sendReminder = obx.QueryBooleanProperty<AppointmentEntity>(
    _entities[0].properties[6],
  );

  /// See [AppointmentEntity.status].
  static final status = obx.QueryStringProperty<AppointmentEntity>(
    _entities[0].properties[7],
  );

  /// see [AppointmentEntity.employees]
  static final employees =
      obx.QueryRelationToMany<AppointmentEntity, EmployeeEntity>(
        _entities[0].relations[0],
      );

  /// see [AppointmentEntity.services]
  static final services =
      obx.QueryRelationToMany<AppointmentEntity, ServiceEntity>(
        _entities[0].relations[1],
      );
}

/// [BatchEntity] entity fields to define ObjectBox queries.
class BatchEntity_ {
  /// See [BatchEntity.id].
  static final id = obx.QueryIntegerProperty<BatchEntity>(
    _entities[1].properties[0],
  );

  /// See [BatchEntity.batchNumber].
  static final batchNumber = obx.QueryStringProperty<BatchEntity>(
    _entities[1].properties[1],
  );

  /// See [BatchEntity.manufactureDate].
  static final manufactureDate = obx.QueryDateProperty<BatchEntity>(
    _entities[1].properties[2],
  );

  /// See [BatchEntity.expiryDate].
  static final expiryDate = obx.QueryDateProperty<BatchEntity>(
    _entities[1].properties[3],
  );

  /// See [BatchEntity.unitPrice].
  static final unitPrice = obx.QueryDoubleProperty<BatchEntity>(
    _entities[1].properties[4],
  );

  /// See [BatchEntity.quantity].
  static final quantity = obx.QueryIntegerProperty<BatchEntity>(
    _entities[1].properties[5],
  );

  /// See [BatchEntity.product].
  static final product = obx.QueryRelationToOne<BatchEntity, ProductEntity>(
    _entities[1].properties[6],
  );

  /// See [BatchEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<BatchEntity>(
    _entities[1].properties[7],
  );

  /// See [BatchEntity.barcode].
  static final barcode = obx.QueryStringProperty<BatchEntity>(
    _entities[1].properties[8],
  );

  /// See [BatchEntity.discount].
  static final discount = obx.QueryDoubleProperty<BatchEntity>(
    _entities[1].properties[9],
  );

  /// See [BatchEntity.isDiscountPercentage].
  static final isDiscountPercentage = obx.QueryBooleanProperty<BatchEntity>(
    _entities[1].properties[10],
  );

  /// See [BatchEntity.hsnSacCode].
  static final hsnSacCode = obx.QueryStringProperty<BatchEntity>(
    _entities[1].properties[11],
  );

  /// See [BatchEntity.gstType].
  static final gstType = obx.QueryStringProperty<BatchEntity>(
    _entities[1].properties[12],
  );

  /// See [BatchEntity.gstRate].
  static final gstRate = obx.QueryDoubleProperty<BatchEntity>(
    _entities[1].properties[13],
  );

  /// See [BatchEntity.cgstAmount].
  static final cgstAmount = obx.QueryDoubleProperty<BatchEntity>(
    _entities[1].properties[14],
  );

  /// See [BatchEntity.sgstAmount].
  static final sgstAmount = obx.QueryDoubleProperty<BatchEntity>(
    _entities[1].properties[15],
  );

  /// See [BatchEntity.igstAmount].
  static final igstAmount = obx.QueryDoubleProperty<BatchEntity>(
    _entities[1].properties[16],
  );
}

/// [EmployeeEntity] entity fields to define ObjectBox queries.
class EmployeeEntity_ {
  /// See [EmployeeEntity.id].
  static final id = obx.QueryIntegerProperty<EmployeeEntity>(
    _entities[2].properties[0],
  );

  /// See [EmployeeEntity.email].
  static final email = obx.QueryStringProperty<EmployeeEntity>(
    _entities[2].properties[1],
  );

  /// See [EmployeeEntity.phone].
  static final phone = obx.QueryStringProperty<EmployeeEntity>(
    _entities[2].properties[2],
  );

  /// See [EmployeeEntity.specialty].
  static final specialty = obx.QueryStringProperty<EmployeeEntity>(
    _entities[2].properties[3],
  );

  /// See [EmployeeEntity.role].
  static final role = obx.QueryStringProperty<EmployeeEntity>(
    _entities[2].properties[4],
  );

  /// See [EmployeeEntity.isActive].
  static final isActive = obx.QueryBooleanProperty<EmployeeEntity>(
    _entities[2].properties[5],
  );

  /// See [EmployeeEntity.joiningDate].
  static final joiningDate = obx.QueryDateProperty<EmployeeEntity>(
    _entities[2].properties[6],
  );

  /// See [EmployeeEntity.totalLeavesAllowed].
  static final totalLeavesAllowed = obx.QueryIntegerProperty<EmployeeEntity>(
    _entities[2].properties[7],
  );

  /// See [EmployeeEntity.leavesTaken].
  static final leavesTaken = obx.QueryIntegerProperty<EmployeeEntity>(
    _entities[2].properties[8],
  );

  /// See [EmployeeEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<EmployeeEntity>(
    _entities[2].properties[9],
  );

  /// See [EmployeeEntity.name].
  static final name = obx.QueryStringProperty<EmployeeEntity>(
    _entities[2].properties[10],
  );

  /// see [EmployeeEntity.workingHours]
  static final workingHours =
      obx.QueryRelationToMany<EmployeeEntity, WorkingHoursEntity>(
        _entities[2].relations[0],
      );

  /// see [EmployeeEntity.attendanceRecords]
  static final attendanceRecords =
      obx.QueryRelationToMany<EmployeeEntity, AttendanceEntity>(
        _entities[2].relations[1],
      );

  /// see [EmployeeEntity.leaveRequests]
  static final leaveRequests =
      obx.QueryRelationToMany<EmployeeEntity, LeaveRequestEntity>(
        _entities[2].relations[2],
      );

  /// see [EmployeeEntity.approvedLeaveRequests]
  static final approvedLeaveRequests =
      obx.QueryRelationToMany<EmployeeEntity, LeaveRequestEntity>(
        _entities[2].relations[3],
      );
}

/// [PaymentEntity] entity fields to define ObjectBox queries.
class PaymentEntity_ {
  /// See [PaymentEntity.id].
  static final id = obx.QueryIntegerProperty<PaymentEntity>(
    _entities[3].properties[0],
  );

  /// See [PaymentEntity.date].
  static final date = obx.QueryDateProperty<PaymentEntity>(
    _entities[3].properties[1],
  );

  /// See [PaymentEntity.paidAmount].
  static final paidAmount = obx.QueryDoubleProperty<PaymentEntity>(
    _entities[3].properties[2],
  );

  /// See [PaymentEntity.remainingAmount].
  static final remainingAmount = obx.QueryDoubleProperty<PaymentEntity>(
    _entities[3].properties[3],
  );

  /// See [PaymentEntity.refund].
  static final refund = obx.QueryDoubleProperty<PaymentEntity>(
    _entities[3].properties[4],
  );

  /// See [PaymentEntity.invoice].
  static final invoice = obx.QueryRelationToOne<PaymentEntity, SaleEntryEntity>(
    _entities[3].properties[5],
  );

  /// See [PaymentEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<PaymentEntity>(
    _entities[3].properties[6],
  );

  /// See [PaymentEntity.refundAmount].
  static final refundAmount = obx.QueryDoubleProperty<PaymentEntity>(
    _entities[3].properties[7],
  );
}

/// [ProductCategoryEntity] entity fields to define ObjectBox queries.
class ProductCategoryEntity_ {
  /// See [ProductCategoryEntity.id].
  static final id = obx.QueryIntegerProperty<ProductCategoryEntity>(
    _entities[4].properties[0],
  );

  /// See [ProductCategoryEntity.name].
  static final name = obx.QueryStringProperty<ProductCategoryEntity>(
    _entities[4].properties[1],
  );

  /// See [ProductCategoryEntity.code].
  static final code = obx.QueryStringProperty<ProductCategoryEntity>(
    _entities[4].properties[2],
  );

  /// See [ProductCategoryEntity.description].
  static final description = obx.QueryStringProperty<ProductCategoryEntity>(
    _entities[4].properties[3],
  );

  /// See [ProductCategoryEntity.parent].
  static final parent =
      obx.QueryRelationToOne<ProductCategoryEntity, ProductCategoryEntity>(
        _entities[4].properties[4],
      );

  /// See [ProductCategoryEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<ProductCategoryEntity>(
    _entities[4].properties[5],
  );

  /// see [ProductCategoryEntity.subcategories]
  static final subcategories =
      obx.QueryRelationToMany<ProductCategoryEntity, ProductCategoryEntity>(
        _entities[4].relations[0],
      );

  /// see [ProductCategoryEntity.products]
  static final products =
      obx.QueryRelationToMany<ProductCategoryEntity, ProductEntity>(
        _entities[4].relations[1],
      );
}

/// [ProductEntity] entity fields to define ObjectBox queries.
class ProductEntity_ {
  /// See [ProductEntity.id].
  static final id = obx.QueryIntegerProperty<ProductEntity>(
    _entities[5].properties[0],
  );

  /// See [ProductEntity.code].
  static final code = obx.QueryStringProperty<ProductEntity>(
    _entities[5].properties[1],
  );

  /// See [ProductEntity.name].
  static final name = obx.QueryStringProperty<ProductEntity>(
    _entities[5].properties[2],
  );

  /// See [ProductEntity.description].
  static final description = obx.QueryStringProperty<ProductEntity>(
    _entities[5].properties[3],
  );

  /// See [ProductEntity.price].
  static final price = obx.QueryDoubleProperty<ProductEntity>(
    _entities[5].properties[4],
  );

  /// See [ProductEntity.quantity].
  static final quantity = obx.QueryIntegerProperty<ProductEntity>(
    _entities[5].properties[5],
  );

  /// See [ProductEntity.category].
  static final category =
      obx.QueryRelationToOne<ProductEntity, ProductCategoryEntity>(
        _entities[5].properties[6],
      );

  /// See [ProductEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<ProductEntity>(
    _entities[5].properties[7],
  );

  /// See [ProductEntity.barcode].
  static final barcode = obx.QueryStringProperty<ProductEntity>(
    _entities[5].properties[8],
  );

  /// See [ProductEntity.discount].
  static final discount = obx.QueryDoubleProperty<ProductEntity>(
    _entities[5].properties[9],
  );

  /// See [ProductEntity.isDiscountPercentage].
  static final isDiscountPercentage = obx.QueryBooleanProperty<ProductEntity>(
    _entities[5].properties[10],
  );

  /// See [ProductEntity.hsnSacCode].
  static final hsnSacCode = obx.QueryStringProperty<ProductEntity>(
    _entities[5].properties[11],
  );

  /// see [ProductEntity.batches]
  static final batches = obx.QueryRelationToMany<ProductEntity, BatchEntity>(
    _entities[5].relations[0],
  );
}

/// [ServiceEntity] entity fields to define ObjectBox queries.
class ServiceEntity_ {
  /// See [ServiceEntity.id].
  static final id = obx.QueryIntegerProperty<ServiceEntity>(
    _entities[6].properties[0],
  );

  /// See [ServiceEntity.code].
  static final code = obx.QueryStringProperty<ServiceEntity>(
    _entities[6].properties[1],
  );

  /// See [ServiceEntity.qty].
  static final qty = obx.QueryIntegerProperty<ServiceEntity>(
    _entities[6].properties[2],
  );

  /// See [ServiceEntity.name].
  static final name = obx.QueryStringProperty<ServiceEntity>(
    _entities[6].properties[3],
  );

  /// See [ServiceEntity.description].
  static final description = obx.QueryStringProperty<ServiceEntity>(
    _entities[6].properties[4],
  );

  /// See [ServiceEntity.price].
  static final price = obx.QueryDoubleProperty<ServiceEntity>(
    _entities[6].properties[5],
  );

  /// See [ServiceEntity.duration].
  static final duration = obx.QueryIntegerProperty<ServiceEntity>(
    _entities[6].properties[6],
  );

  /// See [ServiceEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<ServiceEntity>(
    _entities[6].properties[7],
  );

  /// See [ServiceEntity.hsnSacCode].
  static final hsnSacCode = obx.QueryStringProperty<ServiceEntity>(
    _entities[6].properties[8],
  );

  /// See [ServiceEntity.gstType].
  static final gstType = obx.QueryStringProperty<ServiceEntity>(
    _entities[6].properties[9],
  );

  /// See [ServiceEntity.gstRate].
  static final gstRate = obx.QueryDoubleProperty<ServiceEntity>(
    _entities[6].properties[10],
  );

  /// See [ServiceEntity.cgstAmount].
  static final cgstAmount = obx.QueryDoubleProperty<ServiceEntity>(
    _entities[6].properties[11],
  );

  /// See [ServiceEntity.sgstAmount].
  static final sgstAmount = obx.QueryDoubleProperty<ServiceEntity>(
    _entities[6].properties[12],
  );

  /// See [ServiceEntity.igstAmount].
  static final igstAmount = obx.QueryDoubleProperty<ServiceEntity>(
    _entities[6].properties[13],
  );
}

/// [SubscriptionEntity] entity fields to define ObjectBox queries.
class SubscriptionEntity_ {
  /// See [SubscriptionEntity.id].
  static final id = obx.QueryIntegerProperty<SubscriptionEntity>(
    _entities[7].properties[0],
  );

  /// See [SubscriptionEntity.mobileNumber].
  static final mobileNumber = obx.QueryStringProperty<SubscriptionEntity>(
    _entities[7].properties[1],
  );

  /// See [SubscriptionEntity.plan].
  static final plan = obx.QueryStringProperty<SubscriptionEntity>(
    _entities[7].properties[2],
  );

  /// See [SubscriptionEntity.status].
  static final status = obx.QueryStringProperty<SubscriptionEntity>(
    _entities[7].properties[3],
  );

  /// See [SubscriptionEntity.startDate].
  static final startDate = obx.QueryDateProperty<SubscriptionEntity>(
    _entities[7].properties[4],
  );

  /// See [SubscriptionEntity.endDate].
  static final endDate = obx.QueryDateProperty<SubscriptionEntity>(
    _entities[7].properties[5],
  );

  /// See [SubscriptionEntity.createdAt].
  static final createdAt = obx.QueryDateProperty<SubscriptionEntity>(
    _entities[7].properties[6],
  );

  /// See [SubscriptionEntity.updatedAt].
  static final updatedAt = obx.QueryDateProperty<SubscriptionEntity>(
    _entities[7].properties[7],
  );

  /// See [SubscriptionEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<SubscriptionEntity>(
    _entities[7].properties[8],
  );
}

/// [UserEntity] entity fields to define ObjectBox queries.
class UserEntity_ {
  /// See [UserEntity.id].
  static final id = obx.QueryIntegerProperty<UserEntity>(
    _entities[8].properties[0],
  );

  /// See [UserEntity.name].
  static final name = obx.QueryStringProperty<UserEntity>(
    _entities[8].properties[1],
  );

  /// See [UserEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<UserEntity>(
    _entities[8].properties[2],
  );
}

/// [WorkingHoursEntity] entity fields to define ObjectBox queries.
class WorkingHoursEntity_ {
  /// See [WorkingHoursEntity.id].
  static final id = obx.QueryIntegerProperty<WorkingHoursEntity>(
    _entities[9].properties[0],
  );

  /// See [WorkingHoursEntity.weekday].
  static final weekday = obx.QueryIntegerProperty<WorkingHoursEntity>(
    _entities[9].properties[1],
  );

  /// See [WorkingHoursEntity.startHour].
  static final startHour = obx.QueryIntegerProperty<WorkingHoursEntity>(
    _entities[9].properties[2],
  );

  /// See [WorkingHoursEntity.startMinute].
  static final startMinute = obx.QueryIntegerProperty<WorkingHoursEntity>(
    _entities[9].properties[3],
  );

  /// See [WorkingHoursEntity.endHour].
  static final endHour = obx.QueryIntegerProperty<WorkingHoursEntity>(
    _entities[9].properties[4],
  );

  /// See [WorkingHoursEntity.endMinute].
  static final endMinute = obx.QueryIntegerProperty<WorkingHoursEntity>(
    _entities[9].properties[5],
  );

  /// See [WorkingHoursEntity.employee].
  static final employee =
      obx.QueryRelationToOne<WorkingHoursEntity, EmployeeEntity>(
        _entities[9].properties[6],
      );

  /// See [WorkingHoursEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<WorkingHoursEntity>(
    _entities[9].properties[7],
  );
}

/// [AttendanceEntity] entity fields to define ObjectBox queries.
class AttendanceEntity_ {
  /// See [AttendanceEntity.id].
  static final id = obx.QueryIntegerProperty<AttendanceEntity>(
    _entities[10].properties[0],
  );

  /// See [AttendanceEntity.date].
  static final date = obx.QueryDateProperty<AttendanceEntity>(
    _entities[10].properties[1],
  );

  /// See [AttendanceEntity.notes].
  static final notes = obx.QueryStringProperty<AttendanceEntity>(
    _entities[10].properties[2],
  );

  /// See [AttendanceEntity.employee].
  static final employee =
      obx.QueryRelationToOne<AttendanceEntity, EmployeeEntity>(
        _entities[10].properties[3],
      );

  /// See [AttendanceEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<AttendanceEntity>(
    _entities[10].properties[4],
  );
}

/// [LeaveRequestEntity] entity fields to define ObjectBox queries.
class LeaveRequestEntity_ {
  /// See [LeaveRequestEntity.id].
  static final id = obx.QueryIntegerProperty<LeaveRequestEntity>(
    _entities[11].properties[0],
  );

  /// See [LeaveRequestEntity.startDate].
  static final startDate = obx.QueryDateProperty<LeaveRequestEntity>(
    _entities[11].properties[1],
  );

  /// See [LeaveRequestEntity.endDate].
  static final endDate = obx.QueryDateProperty<LeaveRequestEntity>(
    _entities[11].properties[2],
  );

  /// See [LeaveRequestEntity.reason].
  static final reason = obx.QueryStringProperty<LeaveRequestEntity>(
    _entities[11].properties[3],
  );

  /// See [LeaveRequestEntity.requestDate].
  static final requestDate = obx.QueryDateProperty<LeaveRequestEntity>(
    _entities[11].properties[4],
  );

  /// See [LeaveRequestEntity.decisionDate].
  static final decisionDate = obx.QueryDateProperty<LeaveRequestEntity>(
    _entities[11].properties[5],
  );

  /// See [LeaveRequestEntity.decisionNotes].
  static final decisionNotes = obx.QueryStringProperty<LeaveRequestEntity>(
    _entities[11].properties[6],
  );

  /// See [LeaveRequestEntity.employee].
  static final employee =
      obx.QueryRelationToOne<LeaveRequestEntity, EmployeeEntity>(
        _entities[11].properties[7],
      );

  /// See [LeaveRequestEntity.leaveType].
  static final leaveType =
      obx.QueryRelationToOne<LeaveRequestEntity, LeaveTypeEntity>(
        _entities[11].properties[8],
      );

  /// See [LeaveRequestEntity.approver].
  static final approver =
      obx.QueryRelationToOne<LeaveRequestEntity, EmployeeEntity>(
        _entities[11].properties[9],
      );

  /// See [LeaveRequestEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<LeaveRequestEntity>(
    _entities[11].properties[10],
  );
}

/// [LeaveTypeEntity] entity fields to define ObjectBox queries.
class LeaveTypeEntity_ {
  /// See [LeaveTypeEntity.id].
  static final id = obx.QueryIntegerProperty<LeaveTypeEntity>(
    _entities[12].properties[0],
  );

  /// See [LeaveTypeEntity.name].
  static final name = obx.QueryStringProperty<LeaveTypeEntity>(
    _entities[12].properties[1],
  );

  /// See [LeaveTypeEntity.description].
  static final description = obx.QueryStringProperty<LeaveTypeEntity>(
    _entities[12].properties[2],
  );

  /// See [LeaveTypeEntity.maxDaysPerYear].
  static final maxDaysPerYear = obx.QueryIntegerProperty<LeaveTypeEntity>(
    _entities[12].properties[3],
  );

  /// See [LeaveTypeEntity.requiresApproval].
  static final requiresApproval = obx.QueryBooleanProperty<LeaveTypeEntity>(
    _entities[12].properties[4],
  );

  /// See [LeaveTypeEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<LeaveTypeEntity>(
    _entities[12].properties[5],
  );

  /// see [LeaveTypeEntity.leaveRequests]
  static final leaveRequests =
      obx.QueryRelationToMany<LeaveTypeEntity, LeaveRequestEntity>(
        _entities[12].relations[0],
      );
}

/// [InventoryPartEntity] entity fields to define ObjectBox queries.
class InventoryPartEntity_ {
  /// See [InventoryPartEntity.id].
  static final id = obx.QueryIntegerProperty<InventoryPartEntity>(
    _entities[13].properties[0],
  );

  /// See [InventoryPartEntity.partNumber].
  static final partNumber = obx.QueryStringProperty<InventoryPartEntity>(
    _entities[13].properties[1],
  );

  /// See [InventoryPartEntity.name].
  static final name = obx.QueryStringProperty<InventoryPartEntity>(
    _entities[13].properties[2],
  );

  /// See [InventoryPartEntity.description].
  static final description = obx.QueryStringProperty<InventoryPartEntity>(
    _entities[13].properties[3],
  );

  /// See [InventoryPartEntity.stockQuantity].
  static final stockQuantity = obx.QueryIntegerProperty<InventoryPartEntity>(
    _entities[13].properties[4],
  );

  /// See [InventoryPartEntity.unitPrice].
  static final unitPrice = obx.QueryDoubleProperty<InventoryPartEntity>(
    _entities[13].properties[5],
  );

  /// See [InventoryPartEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<InventoryPartEntity>(
    _entities[13].properties[6],
  );
}

/// [LoyaltyPointEntity] entity fields to define ObjectBox queries.
class LoyaltyPointEntity_ {
  /// See [LoyaltyPointEntity.id].
  static final id = obx.QueryIntegerProperty<LoyaltyPointEntity>(
    _entities[14].properties[0],
  );

  /// See [LoyaltyPointEntity.points].
  static final points = obx.QueryIntegerProperty<LoyaltyPointEntity>(
    _entities[14].properties[1],
  );

  /// See [LoyaltyPointEntity.earnedDate].
  static final earnedDate = obx.QueryDateProperty<LoyaltyPointEntity>(
    _entities[14].properties[2],
  );

  /// See [LoyaltyPointEntity.expiryDate].
  static final expiryDate = obx.QueryDateProperty<LoyaltyPointEntity>(
    _entities[14].properties[3],
  );

  /// See [LoyaltyPointEntity.customer].
  static final customer =
      obx.QueryRelationToOne<LoyaltyPointEntity, CustomerEntity>(
        _entities[14].properties[4],
      );

  /// See [LoyaltyPointEntity.reason].
  static final reason = obx.QueryStringProperty<LoyaltyPointEntity>(
    _entities[14].properties[5],
  );
}

/// [CustomerEntity] entity fields to define ObjectBox queries.
class CustomerEntity_ {
  /// See [CustomerEntity.id].
  static final id = obx.QueryIntegerProperty<CustomerEntity>(
    _entities[15].properties[0],
  );

  /// See [CustomerEntity.name].
  static final name = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[1],
  );

  /// See [CustomerEntity.email].
  static final email = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[2],
  );

  /// See [CustomerEntity.phone].
  static final phone = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[3],
  );

  /// See [CustomerEntity.gender].
  static final gender = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[4],
  );

  /// See [CustomerEntity.code].
  static final code = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[5],
  );

  /// See [CustomerEntity.type].
  static final type = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[6],
  );

  /// See [CustomerEntity.addressLine1].
  static final addressLine1 = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[7],
  );

  /// See [CustomerEntity.addressLine2].
  static final addressLine2 = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[8],
  );

  /// See [CustomerEntity.city].
  static final city = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[9],
  );

  /// See [CustomerEntity.state].
  static final state = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[10],
  );

  /// See [CustomerEntity.postalCode].
  static final postalCode = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[11],
  );

  /// See [CustomerEntity.country].
  static final country = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[12],
  );

  /// See [CustomerEntity.creditLimit].
  static final creditLimit = obx.QueryDoubleProperty<CustomerEntity>(
    _entities[15].properties[13],
  );

  /// See [CustomerEntity.creditDays].
  static final creditDays = obx.QueryIntegerProperty<CustomerEntity>(
    _entities[15].properties[14],
  );

  /// See [CustomerEntity.outstandingBalance].
  static final outstandingBalance = obx.QueryDoubleProperty<CustomerEntity>(
    _entities[15].properties[15],
  );

  /// See [CustomerEntity.paymentTerms].
  static final paymentTerms = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[16],
  );

  /// See [CustomerEntity.bankDetails].
  static final bankDetails = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[17],
  );

  /// See [CustomerEntity.panNumber].
  static final panNumber = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[18],
  );

  /// See [CustomerEntity.gstIN].
  static final gstIN = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[19],
  );

  /// See [CustomerEntity.loyaltyID].
  static final loyaltyID = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[20],
  );

  /// See [CustomerEntity.loyaltyPoints].
  static final loyaltyPoints = obx.QueryIntegerProperty<CustomerEntity>(
    _entities[15].properties[21],
  );

  /// See [CustomerEntity.customerGroup].
  static final customerGroup = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[22],
  );

  /// See [CustomerEntity.priceLevel].
  static final priceLevel = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[23],
  );

  /// See [CustomerEntity.discountPercentage].
  static final discountPercentage = obx.QueryDoubleProperty<CustomerEntity>(
    _entities[15].properties[24],
  );

  /// See [CustomerEntity.dateOfBirth].
  static final dateOfBirth = obx.QueryDateProperty<CustomerEntity>(
    _entities[15].properties[25],
  );

  /// See [CustomerEntity.anniversaryDate].
  static final anniversaryDate = obx.QueryDateProperty<CustomerEntity>(
    _entities[15].properties[26],
  );

  /// See [CustomerEntity.createdAt].
  static final createdAt = obx.QueryDateProperty<CustomerEntity>(
    _entities[15].properties[27],
  );

  /// See [CustomerEntity.createdBy].
  static final createdBy = obx.QueryDateProperty<CustomerEntity>(
    _entities[15].properties[28],
  );

  /// See [CustomerEntity.lastUpdateDate].
  static final lastUpdateDate = obx.QueryDateProperty<CustomerEntity>(
    _entities[15].properties[29],
  );

  /// See [CustomerEntity.lastUpdatedBy].
  static final lastUpdatedBy = obx.QueryDateProperty<CustomerEntity>(
    _entities[15].properties[30],
  );

  /// See [CustomerEntity.outletId].
  static final outletId = obx.QueryStringProperty<CustomerEntity>(
    _entities[15].properties[31],
  );

  /// See [CustomerEntity.isActive].
  static final isActive = obx.QueryBooleanProperty<CustomerEntity>(
    _entities[15].properties[32],
  );

  /// see [CustomerEntity.feedbacks]
  static final feedbacks =
      obx.QueryRelationToMany<CustomerEntity, FeedbackEntity>(
        _entities[15].relations[0],
      );

  /// see [CustomerEntity.memberships]
  static final memberships =
      obx.QueryRelationToMany<CustomerEntity, MembershipEntity>(
        _entities[15].relations[1],
      );

  /// see [CustomerEntity.invoices]
  static final invoices =
      obx.QueryRelationToMany<CustomerEntity, SaleEntryEntity>(
        _entities[15].relations[2],
      );
}

/// [RewardEntity] entity fields to define ObjectBox queries.
class RewardEntity_ {
  /// See [RewardEntity.id].
  static final id = obx.QueryIntegerProperty<RewardEntity>(
    _entities[16].properties[0],
  );

  /// See [RewardEntity.name].
  static final name = obx.QueryStringProperty<RewardEntity>(
    _entities[16].properties[1],
  );

  /// See [RewardEntity.description].
  static final description = obx.QueryStringProperty<RewardEntity>(
    _entities[16].properties[2],
  );

  /// See [RewardEntity.pointsRequired].
  static final pointsRequired = obx.QueryIntegerProperty<RewardEntity>(
    _entities[16].properties[3],
  );

  /// See [RewardEntity.stock].
  static final stock = obx.QueryIntegerProperty<RewardEntity>(
    _entities[16].properties[4],
  );
}

/// [CompanyProfileEntity] entity fields to define ObjectBox queries.
class CompanyProfileEntity_ {
  /// See [CompanyProfileEntity.id].
  static final id = obx.QueryIntegerProperty<CompanyProfileEntity>(
    _entities[17].properties[0],
  );

  /// See [CompanyProfileEntity.name].
  static final name = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[1],
  );

  /// See [CompanyProfileEntity.email].
  static final email = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[2],
  );

  /// See [CompanyProfileEntity.phone].
  static final phone = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[3],
  );

  /// See [CompanyProfileEntity.state].
  static final state = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[4],
  );

  /// See [CompanyProfileEntity.country].
  static final country = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[5],
  );

  /// See [CompanyProfileEntity.code].
  static final code = obx.QueryIntegerProperty<CompanyProfileEntity>(
    _entities[17].properties[6],
  );

  /// See [CompanyProfileEntity.businessType].
  static final businessType = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[7],
  );

  /// See [CompanyProfileEntity.addressLine1].
  static final addressLine1 = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[8],
  );

  /// See [CompanyProfileEntity.addressLine2].
  static final addressLine2 = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[9],
  );

  /// See [CompanyProfileEntity.city].
  static final city = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[10],
  );

  /// See [CompanyProfileEntity.postalCode].
  static final postalCode = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[11],
  );

  /// See [CompanyProfileEntity.panNumber].
  static final panNumber = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[12],
  );

  /// See [CompanyProfileEntity.gstIN].
  static final gstIN = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[13],
  );

  /// See [CompanyProfileEntity.vatTRN].
  static final vatTRN = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[14],
  );

  /// See [CompanyProfileEntity.tinNum].
  static final tinNum = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[15],
  );

  /// See [CompanyProfileEntity.companyRegNum].
  static final companyRegNum = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[16],
  );

  /// See [CompanyProfileEntity.bankName].
  static final bankName = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[17],
  );

  /// See [CompanyProfileEntity.bankAccNum].
  static final bankAccNum = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[18],
  );

  /// See [CompanyProfileEntity.ifscCode].
  static final ifscCode = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[19],
  );

  /// See [CompanyProfileEntity.currencyCode].
  static final currencyCode = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[20],
  );

  /// See [CompanyProfileEntity.financialYearStart].
  static final financialYearStart = obx.QueryDateProperty<CompanyProfileEntity>(
    _entities[17].properties[21],
  );

  /// See [CompanyProfileEntity.taxationModel].
  static final taxationModel = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[22],
  );

  /// See [CompanyProfileEntity.createdDate].
  static final createdDate = obx.QueryDateProperty<CompanyProfileEntity>(
    _entities[17].properties[23],
  );

  /// See [CompanyProfileEntity.createdBy].
  static final createdBy = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[24],
  );

  /// See [CompanyProfileEntity.lastUpdateDate].
  static final lastUpdateDate = obx.QueryDateProperty<CompanyProfileEntity>(
    _entities[17].properties[25],
  );

  /// See [CompanyProfileEntity.lastUpdateBy].
  static final lastUpdateBy = obx.QueryStringProperty<CompanyProfileEntity>(
    _entities[17].properties[26],
  );

  /// See [CompanyProfileEntity.isActive].
  static final isActive = obx.QueryBooleanProperty<CompanyProfileEntity>(
    _entities[17].properties[27],
  );
}

/// [WaitlistEntity] entity fields to define ObjectBox queries.
class WaitlistEntity_ {
  /// See [WaitlistEntity.id].
  static final id = obx.QueryIntegerProperty<WaitlistEntity>(
    _entities[18].properties[0],
  );

  /// See [WaitlistEntity.preferredDate].
  static final preferredDate = obx.QueryDateProperty<WaitlistEntity>(
    _entities[18].properties[1],
  );

  /// See [WaitlistEntity.notes].
  static final notes = obx.QueryStringProperty<WaitlistEntity>(
    _entities[18].properties[2],
  );

  /// See [WaitlistEntity.customer].
  static final customer =
      obx.QueryRelationToOne<WaitlistEntity, CustomerEntity>(
        _entities[18].properties[3],
      );

  /// see [WaitlistEntity.services]
  static final services =
      obx.QueryRelationToMany<WaitlistEntity, ServiceEntity>(
        _entities[18].relations[0],
      );
}

/// [FeedbackEntity] entity fields to define ObjectBox queries.
class FeedbackEntity_ {
  /// See [FeedbackEntity.id].
  static final id = obx.QueryIntegerProperty<FeedbackEntity>(
    _entities[19].properties[0],
  );

  /// See [FeedbackEntity.rating].
  static final rating = obx.QueryIntegerProperty<FeedbackEntity>(
    _entities[19].properties[1],
  );

  /// See [FeedbackEntity.comment].
  static final comment = obx.QueryStringProperty<FeedbackEntity>(
    _entities[19].properties[2],
  );

  /// See [FeedbackEntity.date].
  static final date = obx.QueryDateProperty<FeedbackEntity>(
    _entities[19].properties[3],
  );

  /// See [FeedbackEntity.customer].
  static final customer =
      obx.QueryRelationToOne<FeedbackEntity, CustomerEntity>(
        _entities[19].properties[4],
      );
}

/// [MembershipEntity] entity fields to define ObjectBox queries.
class MembershipEntity_ {
  /// See [MembershipEntity.id].
  static final id = obx.QueryIntegerProperty<MembershipEntity>(
    _entities[20].properties[0],
  );

  /// See [MembershipEntity.type].
  static final type = obx.QueryStringProperty<MembershipEntity>(
    _entities[20].properties[1],
  );

  /// See [MembershipEntity.discount].
  static final discount = obx.QueryDoubleProperty<MembershipEntity>(
    _entities[20].properties[2],
  );

  /// See [MembershipEntity.startDate].
  static final startDate = obx.QueryDateProperty<MembershipEntity>(
    _entities[20].properties[3],
  );

  /// See [MembershipEntity.endDate].
  static final endDate = obx.QueryDateProperty<MembershipEntity>(
    _entities[20].properties[4],
  );

  /// See [MembershipEntity.customer].
  static final customer =
      obx.QueryRelationToOne<MembershipEntity, CustomerEntity>(
        _entities[20].properties[5],
      );
}

/// [CompanyBranchProfileEntity] entity fields to define ObjectBox queries.
class CompanyBranchProfileEntity_ {
  /// See [CompanyBranchProfileEntity.id].
  static final id = obx.QueryIntegerProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[0],
  );

  /// See [CompanyBranchProfileEntity.code].
  static final code = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[1],
  );

  /// See [CompanyBranchProfileEntity.companyId].
  static final companyId = obx.QueryIntegerProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[2],
  );

  /// See [CompanyBranchProfileEntity.branchName].
  static final branchName = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[3],
  );

  /// See [CompanyBranchProfileEntity.branchType].
  static final branchType = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[4],
  );

  /// See [CompanyBranchProfileEntity.addressLine1].
  static final addressLine1 =
      obx.QueryStringProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[5],
      );

  /// See [CompanyBranchProfileEntity.addressLine2].
  static final addressLine2 =
      obx.QueryStringProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[6],
      );

  /// See [CompanyBranchProfileEntity.city].
  static final city = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[7],
  );

  /// See [CompanyBranchProfileEntity.state].
  static final state = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[8],
  );

  /// See [CompanyBranchProfileEntity.postalCode].
  static final postalCode = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[9],
  );

  /// See [CompanyBranchProfileEntity.country].
  static final country = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[10],
  );

  /// See [CompanyBranchProfileEntity.email].
  static final email = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[11],
  );

  /// See [CompanyBranchProfileEntity.phone].
  static final phone = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[12],
  );

  /// See [CompanyBranchProfileEntity.gstIN].
  static final gstIN = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[13],
  );

  /// See [CompanyBranchProfileEntity.vatTRN].
  static final vatTRN = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[14],
  );

  /// See [CompanyBranchProfileEntity.drugLicNum].
  static final drugLicNum = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[15],
  );

  /// See [CompanyBranchProfileEntity.fssaiLicNum].
  static final fssaiLicNum =
      obx.QueryStringProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[16],
      );

  /// See [CompanyBranchProfileEntity.outletGroup].
  static final outletGroup =
      obx.QueryStringProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[17],
      );

  /// See [CompanyBranchProfileEntity.warehouseId].
  static final warehouseId =
      obx.QueryStringProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[18],
      );

  /// See [CompanyBranchProfileEntity.priceLevelDefault].
  static final priceLevelDefault =
      obx.QueryStringProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[19],
      );

  /// See [CompanyBranchProfileEntity.reorderLevel].
  static final reorderLevel =
      obx.QueryIntegerProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[20],
      );

  /// See [CompanyBranchProfileEntity.barcodePrefix].
  static final barcodePrefix =
      obx.QueryStringProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[21],
      );

  /// See [CompanyBranchProfileEntity.zoneClassification].
  static final zoneClassification =
      obx.QueryStringProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[22],
      );

  /// See [CompanyBranchProfileEntity.landmark].
  static final landmark = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[23],
  );

  /// See [CompanyBranchProfileEntity.createdDate].
  static final createdDate = obx.QueryDateProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[24],
  );

  /// See [CompanyBranchProfileEntity.createdBy].
  static final createdBy = obx.QueryStringProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[25],
  );

  /// See [CompanyBranchProfileEntity.lastUpdatedDate].
  static final lastUpdatedDate =
      obx.QueryDateProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[26],
      );

  /// See [CompanyBranchProfileEntity.lastUpdatedBy].
  static final lastUpdatedBy =
      obx.QueryStringProperty<CompanyBranchProfileEntity>(
        _entities[21].properties[27],
      );

  /// See [CompanyBranchProfileEntity.isActive].
  static final isActive = obx.QueryBooleanProperty<CompanyBranchProfileEntity>(
    _entities[21].properties[28],
  );
}

/// [HeldCartEntity] entity fields to define ObjectBox queries.
class HeldCartEntity_ {
  /// See [HeldCartEntity.id].
  static final id = obx.QueryIntegerProperty<HeldCartEntity>(
    _entities[22].properties[0],
  );

  /// See [HeldCartEntity.customerId].
  static final customerId = obx.QueryIntegerProperty<HeldCartEntity>(
    _entities[22].properties[1],
  );

  /// See [HeldCartEntity.holdId].
  static final holdId = obx.QueryStringProperty<HeldCartEntity>(
    _entities[22].properties[2],
  );

  /// See [HeldCartEntity.itemsJson].
  static final itemsJson = obx.QueryStringProperty<HeldCartEntity>(
    _entities[22].properties[3],
  );

  /// See [HeldCartEntity.servicesJson].
  static final servicesJson = obx.QueryStringProperty<HeldCartEntity>(
    _entities[22].properties[4],
  );

  /// See [HeldCartEntity.invoiceDiscount].
  static final invoiceDiscount = obx.QueryDoubleProperty<HeldCartEntity>(
    _entities[22].properties[5],
  );

  /// See [HeldCartEntity.isInvoiceDiscountPercentage].
  static final isInvoiceDiscountPercentage =
      obx.QueryBooleanProperty<HeldCartEntity>(_entities[22].properties[6]);
}

/// [CouponEntity] entity fields to define ObjectBox queries.
class CouponEntity_ {
  /// See [CouponEntity.id].
  static final id = obx.QueryIntegerProperty<CouponEntity>(
    _entities[23].properties[0],
  );

  /// See [CouponEntity.code].
  static final code = obx.QueryStringProperty<CouponEntity>(
    _entities[23].properties[1],
  );

  /// See [CouponEntity.isPercentage].
  static final isPercentage = obx.QueryBooleanProperty<CouponEntity>(
    _entities[23].properties[2],
  );

  /// See [CouponEntity.value].
  static final value = obx.QueryDoubleProperty<CouponEntity>(
    _entities[23].properties[3],
  );

  /// See [CouponEntity.expiryDate].
  static final expiryDate = obx.QueryDateProperty<CouponEntity>(
    _entities[23].properties[4],
  );

  /// See [CouponEntity.isActive].
  static final isActive = obx.QueryBooleanProperty<CouponEntity>(
    _entities[23].properties[5],
  );
}

/// [SaleReturnEntity] entity fields to define ObjectBox queries.
class SaleReturnEntity_ {
  /// See [SaleReturnEntity.id].
  static final id = obx.QueryIntegerProperty<SaleReturnEntity>(
    _entities[24].properties[0],
  );

  /// See [SaleReturnEntity.totalReturnAmount].
  static final totalReturnAmount = obx.QueryDoubleProperty<SaleReturnEntity>(
    _entities[24].properties[1],
  );

  /// See [SaleReturnEntity.reason].
  static final reason = obx.QueryStringProperty<SaleReturnEntity>(
    _entities[24].properties[2],
  );

  /// See [SaleReturnEntity.customer].
  static final customer =
      obx.QueryRelationToOne<SaleReturnEntity, CustomerEntity>(
        _entities[24].properties[3],
      );

  /// See [SaleReturnEntity.returnNumber].
  static final returnNumber = obx.QueryStringProperty<SaleReturnEntity>(
    _entities[24].properties[4],
  );

  /// See [SaleReturnEntity.date].
  static final date = obx.QueryDateProperty<SaleReturnEntity>(
    _entities[24].properties[5],
  );

  /// See [SaleReturnEntity.originalInvoice].
  static final originalInvoice =
      obx.QueryRelationToOne<SaleReturnEntity, SaleEntryEntity>(
        _entities[24].properties[6],
      );

  /// See [SaleReturnEntity.status].
  static final status = obx.QueryStringProperty<SaleReturnEntity>(
    _entities[24].properties[7],
  );

  /// see [SaleReturnEntity.items]
  static final items =
      obx.QueryBacklinkToMany<SaleReturnItemEntity, SaleReturnEntity>(
        SaleReturnItemEntity_.saleReturn,
      );

  /// see [SaleReturnEntity.services]
  static final services =
      obx.QueryBacklinkToMany<SaleReturnServiceEntity, SaleReturnEntity>(
        SaleReturnServiceEntity_.saleReturn,
      );
}

/// [SaleReturnItemEntity] entity fields to define ObjectBox queries.
class SaleReturnItemEntity_ {
  /// See [SaleReturnItemEntity.id].
  static final id = obx.QueryIntegerProperty<SaleReturnItemEntity>(
    _entities[25].properties[0],
  );

  /// See [SaleReturnItemEntity.saleReturn].
  static final saleReturn =
      obx.QueryRelationToOne<SaleReturnItemEntity, SaleReturnEntity>(
        _entities[25].properties[1],
      );

  /// See [SaleReturnItemEntity.quantity].
  static final quantity = obx.QueryIntegerProperty<SaleReturnItemEntity>(
    _entities[25].properties[2],
  );

  /// See [SaleReturnItemEntity.unitPrice].
  static final unitPrice = obx.QueryDoubleProperty<SaleReturnItemEntity>(
    _entities[25].properties[3],
  );

  /// See [SaleReturnItemEntity.discount].
  static final discount = obx.QueryDoubleProperty<SaleReturnItemEntity>(
    _entities[25].properties[4],
  );

  /// See [SaleReturnItemEntity.isDiscountPercentage].
  static final isDiscountPercentage =
      obx.QueryBooleanProperty<SaleReturnItemEntity>(
        _entities[25].properties[5],
      );

  /// See [SaleReturnItemEntity.gstType].
  static final gstType = obx.QueryStringProperty<SaleReturnItemEntity>(
    _entities[25].properties[6],
  );

  /// See [SaleReturnItemEntity.gstRate].
  static final gstRate = obx.QueryDoubleProperty<SaleReturnItemEntity>(
    _entities[25].properties[7],
  );

  /// See [SaleReturnItemEntity.product].
  static final product =
      obx.QueryRelationToOne<SaleReturnItemEntity, ProductEntity>(
        _entities[25].properties[8],
      );

  /// See [SaleReturnItemEntity.batch].
  static final batch =
      obx.QueryRelationToOne<SaleReturnItemEntity, BatchEntity>(
        _entities[25].properties[9],
      );
}

/// [SaleReturnServiceEntity] entity fields to define ObjectBox queries.
class SaleReturnServiceEntity_ {
  /// See [SaleReturnServiceEntity.id].
  static final id = obx.QueryIntegerProperty<SaleReturnServiceEntity>(
    _entities[26].properties[0],
  );

  /// See [SaleReturnServiceEntity.saleReturn].
  static final saleReturn =
      obx.QueryRelationToOne<SaleReturnServiceEntity, SaleReturnEntity>(
        _entities[26].properties[1],
      );

  /// See [SaleReturnServiceEntity.quantity].
  static final quantity = obx.QueryIntegerProperty<SaleReturnServiceEntity>(
    _entities[26].properties[2],
  );

  /// See [SaleReturnServiceEntity.price].
  static final price = obx.QueryDoubleProperty<SaleReturnServiceEntity>(
    _entities[26].properties[3],
  );

  /// See [SaleReturnServiceEntity.discount].
  static final discount = obx.QueryDoubleProperty<SaleReturnServiceEntity>(
    _entities[26].properties[4],
  );

  /// See [SaleReturnServiceEntity.isDiscountPercentage].
  static final isDiscountPercentage =
      obx.QueryBooleanProperty<SaleReturnServiceEntity>(
        _entities[26].properties[5],
      );

  /// See [SaleReturnServiceEntity.gstType].
  static final gstType = obx.QueryStringProperty<SaleReturnServiceEntity>(
    _entities[26].properties[6],
  );

  /// See [SaleReturnServiceEntity.gstRate].
  static final gstRate = obx.QueryDoubleProperty<SaleReturnServiceEntity>(
    _entities[26].properties[7],
  );

  /// See [SaleReturnServiceEntity.service].
  static final service =
      obx.QueryRelationToOne<SaleReturnServiceEntity, ServiceEntity>(
        _entities[26].properties[8],
      );
}

/// [SaleEntryEntity] entity fields to define ObjectBox queries.
class SaleEntryEntity_ {
  /// See [SaleEntryEntity.id].
  static final id = obx.QueryIntegerProperty<SaleEntryEntity>(
    _entities[27].properties[0],
  );

  /// See [SaleEntryEntity.invoiceNumber].
  static final invoiceNumber = obx.QueryStringProperty<SaleEntryEntity>(
    _entities[27].properties[1],
  );

  /// See [SaleEntryEntity.date].
  static final date = obx.QueryDateProperty<SaleEntryEntity>(
    _entities[27].properties[2],
  );

  /// See [SaleEntryEntity.totalBillAmount].
  static final totalBillAmount = obx.QueryDoubleProperty<SaleEntryEntity>(
    _entities[27].properties[3],
  );

  /// See [SaleEntryEntity.amountPaid].
  static final amountPaid = obx.QueryDoubleProperty<SaleEntryEntity>(
    _entities[27].properties[4],
  );

  /// See [SaleEntryEntity.status].
  static final status = obx.QueryStringProperty<SaleEntryEntity>(
    _entities[27].properties[5],
  );

  /// See [SaleEntryEntity.invoiceDiscount].
  static final invoiceDiscount = obx.QueryDoubleProperty<SaleEntryEntity>(
    _entities[27].properties[6],
  );

  /// See [SaleEntryEntity.isInvoiceDiscountPercentage].
  static final isInvoiceDiscountPercentage =
      obx.QueryBooleanProperty<SaleEntryEntity>(_entities[27].properties[7]);

  /// See [SaleEntryEntity.employeeId].
  static final employeeId = obx.QueryStringProperty<SaleEntryEntity>(
    _entities[27].properties[8],
  );

  /// See [SaleEntryEntity.customer].
  static final customer =
      obx.QueryRelationToOne<SaleEntryEntity, CustomerEntity>(
        _entities[27].properties[9],
      );

  /// see [SaleEntryEntity.items]
  static final items =
      obx.QueryRelationToMany<SaleEntryEntity, SaleEntryItemEntity>(
        _entities[27].relations[0],
      );

  /// see [SaleEntryEntity.services]
  static final services =
      obx.QueryRelationToMany<SaleEntryEntity, SaleEntryServicesEntity>(
        _entities[27].relations[1],
      );

  /// see [SaleEntryEntity.payments]
  static final payments =
      obx.QueryRelationToMany<SaleEntryEntity, PaymentEntity>(
        _entities[27].relations[2],
      );
}

/// [SaleEntryItemEntity] entity fields to define ObjectBox queries.
class SaleEntryItemEntity_ {
  /// See [SaleEntryItemEntity.id].
  static final id = obx.QueryIntegerProperty<SaleEntryItemEntity>(
    _entities[28].properties[0],
  );

  /// See [SaleEntryItemEntity.quantity].
  static final quantity = obx.QueryIntegerProperty<SaleEntryItemEntity>(
    _entities[28].properties[1],
  );

  /// See [SaleEntryItemEntity.unitPrice].
  static final unitPrice = obx.QueryDoubleProperty<SaleEntryItemEntity>(
    _entities[28].properties[2],
  );

  /// See [SaleEntryItemEntity.discount].
  static final discount = obx.QueryDoubleProperty<SaleEntryItemEntity>(
    _entities[28].properties[3],
  );

  /// See [SaleEntryItemEntity.isDiscountPercentage].
  static final isDiscountPercentage =
      obx.QueryBooleanProperty<SaleEntryItemEntity>(
        _entities[28].properties[4],
      );

  /// See [SaleEntryItemEntity.gstType].
  static final gstType = obx.QueryStringProperty<SaleEntryItemEntity>(
    _entities[28].properties[5],
  );

  /// See [SaleEntryItemEntity.gstRate].
  static final gstRate = obx.QueryDoubleProperty<SaleEntryItemEntity>(
    _entities[28].properties[6],
  );

  /// See [SaleEntryItemEntity.isHeld].
  static final isHeld = obx.QueryBooleanProperty<SaleEntryItemEntity>(
    _entities[28].properties[7],
  );

  /// See [SaleEntryItemEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<SaleEntryItemEntity>(
    _entities[28].properties[8],
  );

  /// See [SaleEntryItemEntity.invoice].
  static final invoice =
      obx.QueryRelationToOne<SaleEntryItemEntity, SaleEntryEntity>(
        _entities[28].properties[9],
      );

  /// See [SaleEntryItemEntity.product].
  static final product =
      obx.QueryRelationToOne<SaleEntryItemEntity, ProductEntity>(
        _entities[28].properties[10],
      );

  /// See [SaleEntryItemEntity.batch].
  static final batch = obx.QueryRelationToOne<SaleEntryItemEntity, BatchEntity>(
    _entities[28].properties[11],
  );
}

/// [SaleEntryServicesEntity] entity fields to define ObjectBox queries.
class SaleEntryServicesEntity_ {
  /// See [SaleEntryServicesEntity.id].
  static final id = obx.QueryIntegerProperty<SaleEntryServicesEntity>(
    _entities[29].properties[0],
  );

  /// See [SaleEntryServicesEntity.quantity].
  static final quantity = obx.QueryIntegerProperty<SaleEntryServicesEntity>(
    _entities[29].properties[1],
  );

  /// See [SaleEntryServicesEntity.price].
  static final price = obx.QueryDoubleProperty<SaleEntryServicesEntity>(
    _entities[29].properties[2],
  );

  /// See [SaleEntryServicesEntity.discount].
  static final discount = obx.QueryDoubleProperty<SaleEntryServicesEntity>(
    _entities[29].properties[3],
  );

  /// See [SaleEntryServicesEntity.isDiscountPercentage].
  static final isDiscountPercentage =
      obx.QueryBooleanProperty<SaleEntryServicesEntity>(
        _entities[29].properties[4],
      );

  /// See [SaleEntryServicesEntity.gstType].
  static final gstType = obx.QueryStringProperty<SaleEntryServicesEntity>(
    _entities[29].properties[5],
  );

  /// See [SaleEntryServicesEntity.gstRate].
  static final gstRate = obx.QueryDoubleProperty<SaleEntryServicesEntity>(
    _entities[29].properties[6],
  );

  /// See [SaleEntryServicesEntity.isHeld].
  static final isHeld = obx.QueryBooleanProperty<SaleEntryServicesEntity>(
    _entities[29].properties[7],
  );

  /// See [SaleEntryServicesEntity.isDeleted].
  static final isDeleted = obx.QueryBooleanProperty<SaleEntryServicesEntity>(
    _entities[29].properties[8],
  );

  /// See [SaleEntryServicesEntity.invoice].
  static final invoice =
      obx.QueryRelationToOne<SaleEntryServicesEntity, SaleEntryEntity>(
        _entities[29].properties[9],
      );

  /// See [SaleEntryServicesEntity.service].
  static final service =
      obx.QueryRelationToOne<SaleEntryServicesEntity, ServiceEntity>(
        _entities[29].properties[10],
      );
}
